// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: TweetList/nomal 1`] = `
.c5 {
  text-align: center;
}

.c3 {
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
}

.c4 {
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
}

.c0 {
  padding: 9px 12px 0;
}

.c1 {
  font-size: 15px;
  margin-left: 58px;
}

.c2 {
  float: left;
  margin-left: -58px;
  position: absolute;
}

<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <TweetList
    hasMore={true}
    items={
      Array [
        Object {
          "id": "1",
          "name": "ozaki25",
          "text": "PagesとOrganisms以外は状態を持たせない
  - それ以外のコンポーネントはステートレスなので簡単に作れる
  - Reduxみたいなところはフロントエンドエンジニアにまかせる
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
        Object {
          "id": "2",
          "name": "ozaki25",
          "text": "コンポーネントマネージャー
  - コンポーネントの管理に責任を持つ人
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
        Object {
          "id": "3",
          "name": "ozaki25",
          "text": "Storybookいいところ
  - どんなコンポーネントが存在してるか可視化できる
  - コンポーネントの扱い方が分かる
  - UIの修正デバッグが楽
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
        Object {
          "id": "4",
          "name": "ozaki25",
          "text": "不必要にコンポーネント化しすぎた
  AtomicDesignあるあるだと思う
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
        Object {
          "id": "5",
          "name": "ozaki25",
          "text": "これかな
  http://atomicdesign.bradfrost.com/chapter-4/ 
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
        Object {
          "id": "6",
          "name": "ozaki25",
          "text": "AtomicDesignはベースにすぎなくてプロジェクトごとに柔軟に変えていくことも必要
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
        Object {
          "id": "7",
          "name": "ozaki25",
          "text": "PagesとOrganismsどの単位でReduxをConnectするか
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
        Object {
          "id": "8",
          "name": "ozaki25",
          "text": "コンポーネント指向
  - 見た目と機能をカプセル化
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
        Object {
          "id": "9",
          "name": "ozaki25",
          "text": "Template必要なのか
  たしかに使ってない
  #ThinkAtomicDesign",
          "time": "12月10日",
        },
      ]
    }
    loadMore={[MockFunction]}
  >
    <InfiniteScroll
      element="div"
      getScrollParent={null}
      hasMore={true}
      initialLoad={true}
      isReverse={false}
      key="9"
      loadMore={[MockFunction]}
      loader={<Spinner />}
      pageStart={0}
      ref={null}
      threshold={100}
      useCapture={false}
      useWindow={true}
    >
      <div>
        <Tweet
          fixed={false}
          id="1"
          key="1"
          name="ozaki25"
          text="PagesとOrganisms以外は状態を持たせない
  - それ以外のコンポーネントはステートレスなので簡単に作れる
  - Reduxみたいなところはフロントエンドエンジニアにまかせる
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="PagesとOrganisms以外は状態を持たせない
  - それ以外のコンポーネントはステートレスなので簡単に作れる
  - Reduxみたいなところはフロントエンドエンジニアにまかせる
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              PagesとOrganisms以外は状態を持たせない
  - それ以外のコンポーネントはステートレスなので簡単に作れる
  - Reduxみたいなところはフロントエンドエンジニアにまかせる
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Tweet
          fixed={false}
          id="2"
          key="2"
          name="ozaki25"
          text="コンポーネントマネージャー
  - コンポーネントの管理に責任を持つ人
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="コンポーネントマネージャー
  - コンポーネントの管理に責任を持つ人
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              コンポーネントマネージャー
  - コンポーネントの管理に責任を持つ人
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Tweet
          fixed={false}
          id="3"
          key="3"
          name="ozaki25"
          text="Storybookいいところ
  - どんなコンポーネントが存在してるか可視化できる
  - コンポーネントの扱い方が分かる
  - UIの修正デバッグが楽
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="Storybookいいところ
  - どんなコンポーネントが存在してるか可視化できる
  - コンポーネントの扱い方が分かる
  - UIの修正デバッグが楽
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              Storybookいいところ
  - どんなコンポーネントが存在してるか可視化できる
  - コンポーネントの扱い方が分かる
  - UIの修正デバッグが楽
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Tweet
          fixed={false}
          id="4"
          key="4"
          name="ozaki25"
          text="不必要にコンポーネント化しすぎた
  AtomicDesignあるあるだと思う
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="不必要にコンポーネント化しすぎた
  AtomicDesignあるあるだと思う
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              不必要にコンポーネント化しすぎた
  AtomicDesignあるあるだと思う
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Tweet
          fixed={false}
          id="5"
          key="5"
          name="ozaki25"
          text="これかな
  http://atomicdesign.bradfrost.com/chapter-4/ 
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="これかな
  http://atomicdesign.bradfrost.com/chapter-4/ 
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              これかな
  http://atomicdesign.bradfrost.com/chapter-4/ 
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Tweet
          fixed={false}
          id="6"
          key="6"
          name="ozaki25"
          text="AtomicDesignはベースにすぎなくてプロジェクトごとに柔軟に変えていくことも必要
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="AtomicDesignはベースにすぎなくてプロジェクトごとに柔軟に変えていくことも必要
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              AtomicDesignはベースにすぎなくてプロジェクトごとに柔軟に変えていくことも必要
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Tweet
          fixed={false}
          id="7"
          key="7"
          name="ozaki25"
          text="PagesとOrganismsどの単位でReduxをConnectするか
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="PagesとOrganismsどの単位でReduxをConnectするか
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              PagesとOrganismsどの単位でReduxをConnectするか
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Tweet
          fixed={false}
          id="8"
          key="8"
          name="ozaki25"
          text="コンポーネント指向
  - 見た目と機能をカプセル化
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="コンポーネント指向
  - 見た目と機能をカプセル化
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              コンポーネント指向
  - 見た目と機能をカプセル化
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Tweet
          fixed={false}
          id="9"
          key="9"
          name="ozaki25"
          text="Template必要なのか
  たしかに使ってない
  #ThinkAtomicDesign"
          time="12月10日"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bZQynM",
                    "isStatic": true,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: 9px 12px 0;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bZQynM",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  font-size: 15px;
  margin-left: 58px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.div>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  float: left;
  margin-left: -58px;
  position: absolute;
",
                                ],
                              },
                              "displayName": "styled.div",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c2"
                          >
                            <WithStyles(CharIcon)
                              name="ozaki25"
                            >
                              <CharIcon
                                classes={
                                  Object {
                                    "amber": "CharIcon-amber-15",
                                    "avatar": "CharIcon-avatar-1",
                                    "blue": "CharIcon-blue-7",
                                    "blueGrey": "CharIcon-blueGrey-20",
                                    "brown": "CharIcon-brown-18",
                                    "cyan": "CharIcon-cyan-9",
                                    "deepOrange": "CharIcon-deepOrange-17",
                                    "deepPurple": "CharIcon-deepPurple-5",
                                    "green": "CharIcon-green-11",
                                    "grey": "CharIcon-grey-19",
                                    "indigo": "CharIcon-indigo-6",
                                    "lightBlue": "CharIcon-lightBlue-8",
                                    "lightGreen": "CharIcon-lightGreen-12",
                                    "lime": "CharIcon-lime-13",
                                    "orange": "CharIcon-orange-16",
                                    "pink": "CharIcon-pink-3",
                                    "purple": "CharIcon-purple-4",
                                    "red": "CharIcon-red-2",
                                    "teal": "CharIcon-teal-10",
                                    "yellow": "CharIcon-yellow-14",
                                  }
                                }
                                name="ozaki25"
                              >
                                <WithStyles(Avatar)
                                  className="CharIcon-avatar-1 CharIcon-brown-18"
                                >
                                  <Avatar
                                    className="CharIcon-avatar-1 CharIcon-brown-18"
                                    classes={
                                      Object {
                                        "colorDefault": "MuiAvatar-colorDefault-22",
                                        "img": "MuiAvatar-img-23",
                                        "root": "MuiAvatar-root-21",
                                      }
                                    }
                                    component="div"
                                  >
                                    <div
                                      className="MuiAvatar-root-21 MuiAvatar-colorDefault-22 CharIcon-avatar-1 CharIcon-brown-18"
                                    >
                                      o
                                    </div>
                                  </Avatar>
                                </WithStyles(Avatar)>
                              </CharIcon>
                            </WithStyles(CharIcon)>
                          </div>
                        </StyledComponent>
                      </styled.div>
                      <TweetHeader
                        name="ozaki25"
                        time="12月10日"
                      >
                        <strong>
                          ozaki25
                        </strong>
                        <styled.small>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "bUZGRr",
                                  "rules": Array [],
                                },
                                "displayName": "styled.small",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "small",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <small
                              className=""
                            >
                              12月10日
                            </small>
                          </StyledComponent>
                        </styled.small>
                      </TweetHeader>
                      <TweetBody
                        text="Template必要なのか
  たしかに使ってない
  #ThinkAtomicDesign"
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-ifAKCX",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 0;
  white-space: pre-wrap;
  word-wrap: break-word;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-ifAKCX",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              Template必要なのか
  たしかに使ってない
  #ThinkAtomicDesign
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </TweetBody>
                      <TweetFooter
                        onClickLike={[Function]}
                        onClickReply={[Function]}
                        onClickRetweet={[Function]}
                      >
                        <Component
                          classes={
                            Object {
                              "smallIcon": "Component-smallIcon-24",
                            }
                          }
                          onClickLike={[Function]}
                          onClickReply={[Function]}
                          onClickRetweet={[Function]}
                        >
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(ModeCommentOutlinedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <ModeCommentOutlinedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0V0z"
                                                        fill="none"
                                                      />
                                                      <g>
                                                        <path
                                                          d="M20 17.17L18.83 16H4V4h16v13.17zM20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h14l4 4V4c0-1.1-.9-2-2-2z"
                                                        />
                                                      </g>
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </ModeCommentOutlinedIcon>
                                            </pure(ModeCommentOutlinedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(RepeatRoundedIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <RepeatRoundedIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M7 7h10v1.79c0 .45.54.67.85.35l2.79-2.79c.2-.2.2-.51 0-.71l-2.79-2.79c-.31-.31-.85-.09-.85.36V5H6c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1V7zm10 10H7v-1.79c0-.45-.54-.67-.85-.35l-2.79 2.79c-.2.2-.2.51 0 .71l2.79 2.79c.31.31.85.09.85-.36V19h11c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1s-1 .45-1 1v3z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </RepeatRoundedIcon>
                                            </pure(RepeatRoundedIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                          <styled.div>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "sc-EHOje",
                                    "isStatic": true,
                                    "lastClassName": "c4",
                                    "rules": Array [
                                      "
  display: inline-block;
  margin: 4px 0;
  min-width: 78px;
",
                                    ],
                                  },
                                  "displayName": "styled.div",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "sc-EHOje",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <div
                                className="c4"
                              >
                                <WithStyles(IconButton)
                                  className="Component-smallIcon-24"
                                  onClick={[Function]}
                                >
                                  <IconButton
                                    className="Component-smallIcon-24"
                                    classes={
                                      Object {
                                        "colorInherit": "MuiIconButton-colorInherit-26",
                                        "colorPrimary": "MuiIconButton-colorPrimary-27",
                                        "colorSecondary": "MuiIconButton-colorSecondary-28",
                                        "disabled": "MuiIconButton-disabled-29",
                                        "label": "MuiIconButton-label-30",
                                        "root": "MuiIconButton-root-25",
                                      }
                                    }
                                    color="default"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <WithStyles(ButtonBase)
                                      centerRipple={true}
                                      className="MuiIconButton-root-25 Component-smallIcon-24"
                                      disabled={false}
                                      focusRipple={true}
                                      onClick={[Function]}
                                    >
                                      <ButtonBase
                                        centerRipple={true}
                                        className="MuiIconButton-root-25 Component-smallIcon-24"
                                        classes={
                                          Object {
                                            "disabled": "MuiButtonBase-disabled-32",
                                            "focusVisible": "MuiButtonBase-focusVisible-33",
                                            "root": "MuiButtonBase-root-31",
                                          }
                                        }
                                        component="button"
                                        disableRipple={false}
                                        disableTouchRipple={false}
                                        disabled={false}
                                        focusRipple={true}
                                        onClick={[Function]}
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <button
                                          className="MuiButtonBase-root-31 MuiIconButton-root-25 Component-smallIcon-24"
                                          disabled={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onContextMenu={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          tabIndex="0"
                                          type="button"
                                        >
                                          <span
                                            className="MuiIconButton-label-30"
                                          >
                                            <pure(FavoriteBorderIcon)
                                              color="action"
                                              fontSize="inherit"
                                            >
                                              <FavoriteBorderIcon
                                                color="action"
                                                fontSize="inherit"
                                              >
                                                <WithStyles(SvgIcon)
                                                  color="action"
                                                  fontSize="inherit"
                                                >
                                                  <SvgIcon
                                                    classes={
                                                      Object {
                                                        "colorAction": "MuiSvgIcon-colorAction-37",
                                                        "colorDisabled": "MuiSvgIcon-colorDisabled-39",
                                                        "colorError": "MuiSvgIcon-colorError-38",
                                                        "colorPrimary": "MuiSvgIcon-colorPrimary-35",
                                                        "colorSecondary": "MuiSvgIcon-colorSecondary-36",
                                                        "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-40",
                                                        "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-42",
                                                        "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-41",
                                                        "root": "MuiSvgIcon-root-34",
                                                      }
                                                    }
                                                    color="action"
                                                    component="svg"
                                                    fontSize="inherit"
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <svg
                                                      aria-hidden="true"
                                                      className="MuiSvgIcon-root-34 MuiSvgIcon-colorAction-37 MuiSvgIcon-fontSizeInherit-40"
                                                      focusable="false"
                                                      role="presentation"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M0 0h24v24H0z"
                                                        fill="none"
                                                      />
                                                      <path
                                                        d="M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"
                                                      />
                                                    </svg>
                                                  </SvgIcon>
                                                </WithStyles(SvgIcon)>
                                              </FavoriteBorderIcon>
                                            </pure(FavoriteBorderIcon)>
                                          </span>
                                          <NoSsr
                                            defer={false}
                                            fallback={null}
                                          >
                                            <WithStyles(TouchRipple)
                                              center={true}
                                              innerRef={[Function]}
                                            >
                                              <TouchRipple
                                                center={true}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child-62",
                                                    "childLeaving": "MuiTouchRipple-childLeaving-63",
                                                    "childPulsate": "MuiTouchRipple-childPulsate-64",
                                                    "ripple": "MuiTouchRipple-ripple-59",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate-61",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible-60",
                                                    "root": "MuiTouchRipple-root-58",
                                                  }
                                                }
                                              >
                                                <TransitionGroup
                                                  childFactory={[Function]}
                                                  className="MuiTouchRipple-root-58"
                                                  component="span"
                                                  enter={true}
                                                  exit={true}
                                                >
                                                  <span
                                                    className="MuiTouchRipple-root-58"
                                                  />
                                                </TransitionGroup>
                                              </TouchRipple>
                                            </WithStyles(TouchRipple)>
                                          </NoSsr>
                                        </button>
                                      </ButtonBase>
                                    </WithStyles(ButtonBase)>
                                  </IconButton>
                                </WithStyles(IconButton)>
                              </div>
                            </StyledComponent>
                          </styled.div>
                        </Component>
                      </TweetFooter>
                    </div>
                  </StyledComponent>
                </styled.div>
              </div>
            </StyledComponent>
          </styled.div>
          <WithStyles(Divider)
            light={true}
          >
            <Divider
              absolute={false}
              classes={
                Object {
                  "absolute": "MuiDivider-absolute-44",
                  "inset": "MuiDivider-inset-45",
                  "light": "MuiDivider-light-46",
                  "middle": "MuiDivider-middle-47",
                  "root": "MuiDivider-root-43",
                }
              }
              component="hr"
              light={true}
              variant="fullWidth"
            >
              <hr
                className="MuiDivider-root-43 MuiDivider-light-46"
              />
            </Divider>
          </WithStyles(Divider)>
        </Tweet>
        <Spinner
          key="9"
        >
          <styled.div>
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": true,
                    "lastClassName": "c5",
                    "rules": Array [
                      "
  text-align: center;
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <div
                className="c5"
              >
                <WithStyles(CircularProgress)>
                  <CircularProgress
                    classes={
                      Object {
                        "circle": "MuiCircularProgress-circle-54",
                        "circleDisableShrink": "MuiCircularProgress-circleDisableShrink-57",
                        "circleIndeterminate": "MuiCircularProgress-circleIndeterminate-56",
                        "circleStatic": "MuiCircularProgress-circleStatic-55",
                        "colorPrimary": "MuiCircularProgress-colorPrimary-51",
                        "colorSecondary": "MuiCircularProgress-colorSecondary-52",
                        "indeterminate": "MuiCircularProgress-indeterminate-50",
                        "root": "MuiCircularProgress-root-48",
                        "static": "MuiCircularProgress-static-49",
                        "svg": "MuiCircularProgress-svg-53",
                      }
                    }
                    color="primary"
                    disableShrink={false}
                    size={40}
                    thickness={3.6}
                    value={0}
                    variant="indeterminate"
                  >
                    <div
                      className="MuiCircularProgress-root-48 MuiCircularProgress-colorPrimary-51 MuiCircularProgress-indeterminate-50"
                      role="progressbar"
                      style={
                        Object {
                          "height": 40,
                          "width": 40,
                        }
                      }
                    >
                      <svg
                        className="MuiCircularProgress-svg-53"
                        viewBox="22 22 44 44"
                      >
                        <circle
                          className="MuiCircularProgress-circle-54 MuiCircularProgress-circleIndeterminate-56"
                          cx={44}
                          cy={44}
                          fill="none"
                          r={20.2}
                          strokeWidth={3.6}
                          style={Object {}}
                        />
                      </svg>
                    </div>
                  </CircularProgress>
                </WithStyles(CircularProgress)>
              </div>
            </StyledComponent>
          </styled.div>
        </Spinner>
      </div>
    </InfiniteScroll>
  </TweetList>
</MockRouter>
`;
