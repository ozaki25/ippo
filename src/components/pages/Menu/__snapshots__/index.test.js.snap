// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: Menu/nomal 1`] = `
.c2 {
  min-height: 130px;
}

.c4 {
  min-height: inherit;
}

.c1 {
  margin: 8px 0;
}

.c0 {
  padding: 10px 15px;
}

.c3 {
  margin: 8px 0;
  text-align: center;
}

<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <Menu
    authUser={null}
    external={
      Object {
        "connpass": Object {
          "events": Array [
            Object {
              "catch": "説明です",
              "event_id": 0,
              "event_url": "https://connpass.com/",
              "place": "晴海",
              "started_at": "2018/12/1 9:30",
              "title": "タイトル0",
            },
            Object {
              "catch": "説明です",
              "event_id": 1,
              "event_url": "https://connpass.com/",
              "place": "晴海",
              "started_at": "2018/12/1 9:30",
              "title": "タイトル1",
            },
            Object {
              "catch": "説明です",
              "event_id": 2,
              "event_url": "https://connpass.com/",
              "place": "晴海",
              "started_at": "2018/12/1 9:30",
              "title": "タイトル2",
            },
            Object {
              "catch": "説明です",
              "event_id": 3,
              "event_url": "https://connpass.com/",
              "place": "晴海",
              "started_at": "2018/12/1 9:30",
              "title": "タイトル3",
            },
            Object {
              "catch": "説明です",
              "event_id": 4,
              "event_url": "https://connpass.com/",
              "place": "晴海",
              "started_at": "2018/12/1 9:30",
              "title": "タイトル4",
            },
          ],
        },
        "loading": false,
      }
    }
    internal={
      Object {
        "internalEvents": Array [
          Object {
            "catchMessage": "説明です",
            "eventUrl": "https://connpass.com/",
            "id": "ID0",
            "place": "晴海",
            "startedAt": "2018/12/1 9:30",
            "title": "タイトル0",
          },
          Object {
            "catchMessage": "説明です",
            "eventUrl": "https://connpass.com/",
            "id": "ID1",
            "place": "晴海",
            "startedAt": "2018/12/1 9:30",
            "title": "タイトル1",
          },
          Object {
            "catchMessage": "説明です",
            "eventUrl": "https://connpass.com/",
            "id": "ID2",
            "place": "晴海",
            "startedAt": "2018/12/1 9:30",
            "title": "タイトル2",
          },
          Object {
            "catchMessage": "説明です",
            "eventUrl": "https://connpass.com/",
            "id": "ID3",
            "place": "晴海",
            "startedAt": "2018/12/1 9:30",
            "title": "タイトル3",
          },
          Object {
            "catchMessage": "説明です",
            "eventUrl": "https://connpass.com/",
            "id": "ID4",
            "place": "晴海",
            "startedAt": "2018/12/1 9:30",
            "title": "タイトル4",
          },
        ],
        "loading": false,
      }
    }
  >
    <Container
      authUser={null}
      noPadding={false}
    >
      <withRouter()
        authUser={null}
      >
        <Route>
          <Component
            authUser={null}
            history={
              Object {
                "createHref": [Function],
                "path": "",
                "push": [Function],
                "replace": [Function],
              }
            }
            location=""
            match={
              Object {
                "params": Object {},
                "path": "",
                "url": "",
              }
            }
          >
            <NavigationBar
              authUser={null}
              firebase={null}
              history={
                Object {
                  "createHref": [Function],
                  "path": "",
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location=""
              match={
                Object {
                  "params": Object {},
                  "path": "",
                  "url": "",
                }
              }
            >
              <Blueprint3.Navbar>
                <div
                  className="bp3-navbar"
                >
                  <Blueprint3.NavbarGroup
                    align="left"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-left"
                    >
                      <Blueprint3.NavbarHeading>
                        <div
                          className="bp3-navbar-heading"
                        >
                          IPPO
                        </div>
                      </Blueprint3.NavbarHeading>
                      <Blueprint3.NavbarDivider>
                        <div
                          className="bp3-navbar-divider"
                        />
                      </Blueprint3.NavbarDivider>
                    </div>
                  </Blueprint3.NavbarGroup>
                  <Blueprint3.NavbarGroup
                    align="right"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-right"
                    >
                      <Blueprint3.Button
                        icon="wrench"
                        minimal={true}
                        onClick={[Function]}
                      >
                        <button
                          className="bp3-button bp3-minimal"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          type="button"
                        >
                          <Blueprint3.Icon
                            icon="wrench"
                            key="leftIcon"
                          >
                            <span
                              className="bp3-icon bp3-icon-wrench"
                              icon="wrench"
                            >
                              <svg
                                data-icon="wrench"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <desc>
                                  wrench
                                </desc>
                                <path
                                  d="M15.83 3.7l-3.06 3.05-2.84-.7-.7-2.83L12.29.17a5.004 5.004 0 0 0-4.83 1.29 4.967 4.967 0 0 0-1.12 5.36L.58 12.58c-.36.36-.58.86-.58 1.41 0 1.1.9 2 2 2 .55 0 1.05-.22 1.41-.59l5.77-5.77c1.79.69 3.91.33 5.35-1.12 1.32-1.3 1.74-3.15 1.3-4.81z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                          <Blueprint3.Icon
                            key="rightIcon"
                          />
                        </button>
                      </Blueprint3.Button>
                    </div>
                  </Blueprint3.NavbarGroup>
                </div>
              </Blueprint3.Navbar>
            </NavigationBar>
          </Component>
        </Route>
      </withRouter()>
      <styled.div
        noPadding={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          noPadding={false}
        >
          <div
            className="c0"
          >
            <Component>
              <h3
                className="bp3-heading"
              >
                <Link
                  replace={false}
                  to="/events/entry"
                >
                  <a
                    onClick={[Function]}
                  >
                    参加イベント
                  </a>
                </Link>
              </h3>
            </Component>
            <AsyncSwipeable
              loading={false}
            >
              <ShrinkSwipeable>
                <ReactSwipableView
                  animateHeight={false}
                  animateTransitions={true}
                  axis="x"
                  disableLazyLoading={false}
                  disabled={false}
                  enableMouseEvents={true}
                  hysteresis={0.4}
                  ignoreNativeScroll={false}
                  index={0}
                  resistance={false}
                  slideStyle={
                    Object {
                      "padding": "0 5px",
                    }
                  }
                  springConfig={
                    Object {
                      "delay": "0s",
                      "duration": "0.35s",
                      "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                    }
                  }
                  style={
                    Object {
                      "padding": "0 15px",
                    }
                  }
                  threshold={5}
                >
                  <div
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    onMouseUp={[Function]}
                    onScroll={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "overflowX": "hidden",
                        "padding": "0 15px",
                      }
                    }
                  >
                    <div
                      className="react-swipeable-view-container"
                      style={
                        Object {
                          "WebkitFlexDirection": "row",
                          "WebkitTransition": "all 0s ease 0s",
                          "direction": "ltr",
                          "display": "flex",
                          "flexDirection": "row",
                          "height": null,
                          "transition": "all 0s ease 0s",
                          "willChange": "transform",
                        }
                      }
                    >
                      <div
                        aria-hidden={false}
                        data-swipeable="true"
                        key=".0"
                        style={
                          Object {
                            "WebkitFlexShrink": 0,
                            "flexShrink": 0,
                            "overflow": "auto",
                            "padding": "0 5px",
                            "width": "100%",
                          }
                        }
                      >
                        <Blueprint3.Text>
                          <div
                            className=""
                          >
                            該当するイベントがありません
                          </div>
                        </Blueprint3.Text>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
              </ShrinkSwipeable>
            </AsyncSwipeable>
            <Component>
              <h3
                className="bp3-heading"
              >
                <Link
                  replace={false}
                  to="/events/recommended"
                >
                  <a
                    onClick={[Function]}
                  >
                    おすすめイベント
                  </a>
                </Link>
              </h3>
            </Component>
            <AsyncSwipeable
              loading={false}
            >
              <ShrinkSwipeable>
                <ReactSwipableView
                  animateHeight={false}
                  animateTransitions={true}
                  axis="x"
                  disableLazyLoading={false}
                  disabled={false}
                  enableMouseEvents={true}
                  hysteresis={0.4}
                  ignoreNativeScroll={false}
                  index={0}
                  resistance={false}
                  slideStyle={
                    Object {
                      "padding": "0 5px",
                    }
                  }
                  springConfig={
                    Object {
                      "delay": "0s",
                      "duration": "0.35s",
                      "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                    }
                  }
                  style={
                    Object {
                      "padding": "0 15px",
                    }
                  }
                  threshold={5}
                >
                  <div
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    onMouseUp={[Function]}
                    onScroll={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "overflowX": "hidden",
                        "padding": "0 15px",
                      }
                    }
                  >
                    <div
                      className="react-swipeable-view-container"
                      style={
                        Object {
                          "WebkitFlexDirection": "row",
                          "WebkitTransition": "all 0s ease 0s",
                          "direction": "ltr",
                          "display": "flex",
                          "flexDirection": "row",
                          "height": null,
                          "transition": "all 0s ease 0s",
                          "willChange": "transform",
                        }
                      }
                    >
                      <div
                        aria-hidden={false}
                        data-swipeable="true"
                        key=".0"
                        style={
                          Object {
                            "WebkitFlexShrink": 0,
                            "flexShrink": 0,
                            "overflow": "auto",
                            "padding": "0 5px",
                            "width": "100%",
                          }
                        }
                      >
                        <Blueprint3.Text>
                          <div
                            className=""
                          >
                            該当するイベントがありません
                          </div>
                        </Blueprint3.Text>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
              </ShrinkSwipeable>
            </AsyncSwipeable>
            <Component>
              <h3
                className="bp3-heading"
              >
                <Link
                  replace={false}
                  to="/events/internal"
                >
                  <a
                    onClick={[Function]}
                  >
                    社内イベント
                  </a>
                </Link>
              </h3>
            </Component>
            <AsyncSwipeable
              loading={false}
            >
              <ShrinkSwipeable>
                <ReactSwipableView
                  animateHeight={false}
                  animateTransitions={true}
                  axis="x"
                  disableLazyLoading={false}
                  disabled={false}
                  enableMouseEvents={true}
                  hysteresis={0.4}
                  ignoreNativeScroll={false}
                  index={0}
                  resistance={false}
                  slideStyle={
                    Object {
                      "padding": "0 5px",
                    }
                  }
                  springConfig={
                    Object {
                      "delay": "0s",
                      "duration": "0.35s",
                      "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                    }
                  }
                  style={
                    Object {
                      "padding": "0 15px",
                    }
                  }
                  threshold={5}
                >
                  <div
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    onMouseUp={[Function]}
                    onScroll={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "overflowX": "hidden",
                        "padding": "0 15px",
                      }
                    }
                  >
                    <div
                      className="react-swipeable-view-container"
                      style={
                        Object {
                          "WebkitFlexDirection": "row",
                          "WebkitTransition": "all 0s ease 0s",
                          "direction": "ltr",
                          "display": "flex",
                          "flexDirection": "row",
                          "height": null,
                          "transition": "all 0s ease 0s",
                          "willChange": "transform",
                        }
                      }
                    >
                      <div
                        aria-hidden={false}
                        data-swipeable="true"
                        key=".$ID0"
                        style={
                          Object {
                            "WebkitFlexShrink": 0,
                            "flexShrink": 0,
                            "overflow": "auto",
                            "padding": "0 5px",
                            "width": "100%",
                          }
                        }
                      >
                        <styled.div
                          key="ID0"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": true,
                                  "lastClassName": "c1",
                                  "rules": Array [
                                    "
  margin: 8px 0;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1"
                            >
                              <EventCard
                                catchMessage="説明です"
                                datetime="2018/12/01 09:30 〜"
                                eventUrl="https://connpass.com/"
                                expand={true}
                                history={null}
                                interactive={true}
                                place="晴海"
                                title="タイトル0"
                              >
                                <CustomCard
                                  expand={true}
                                  history={null}
                                  interactive={true}
                                  url="https://connpass.com/"
                                >
                                  <Styled(Blueprint3.Card)
                                    elevation={2}
                                    expand={1}
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      elevation={2}
                                      expand={1}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bdVaJa",
                                            "isStatic": false,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "
  min-height: ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "Styled(Blueprint3.Card)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bdVaJa",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                          Symbol(Symbol.hasInstance): [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Blueprint3.Card
                                        className="c2"
                                        elevation={2}
                                        expand={1}
                                        interactive={false}
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="bp3-card bp3-elevation-2 c2"
                                          expand={1}
                                          onClick={[Function]}
                                        >
                                          <h3
                                            className="bp3-heading"
                                          >
                                            タイトル0
                                          </h3>
                                          <Blueprint3.Text>
                                            <div
                                              className=""
                                            >
                                              概要：説明です
                                            </div>
                                          </Blueprint3.Text>
                                          <Blueprint3.Text>
                                            <div
                                              className=""
                                            >
                                              場所：晴海
                                            </div>
                                          </Blueprint3.Text>
                                          <Blueprint3.Text>
                                            <div
                                              className=""
                                            >
                                              日時：2018/12/01 09:30 〜
                                            </div>
                                          </Blueprint3.Text>
                                        </div>
                                      </Blueprint3.Card>
                                    </StyledComponent>
                                  </Styled(Blueprint3.Card)>
                                </CustomCard>
                              </EventCard>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
              </ShrinkSwipeable>
            </AsyncSwipeable>
            <Component>
              <h3
                className="bp3-heading"
              >
                <Link
                  replace={false}
                  to="/events/external"
                >
                  <a
                    onClick={[Function]}
                  >
                    社外イベント
                  </a>
                </Link>
              </h3>
            </Component>
            <AsyncSwipeable
              loading={false}
            >
              <ShrinkSwipeable>
                <ReactSwipableView
                  animateHeight={false}
                  animateTransitions={true}
                  axis="x"
                  disableLazyLoading={false}
                  disabled={false}
                  enableMouseEvents={true}
                  hysteresis={0.4}
                  ignoreNativeScroll={false}
                  index={0}
                  resistance={false}
                  slideStyle={
                    Object {
                      "padding": "0 5px",
                    }
                  }
                  springConfig={
                    Object {
                      "delay": "0s",
                      "duration": "0.35s",
                      "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                    }
                  }
                  style={
                    Object {
                      "padding": "0 15px",
                    }
                  }
                  threshold={5}
                >
                  <div
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    onMouseUp={[Function]}
                    onScroll={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "overflowX": "hidden",
                        "padding": "0 15px",
                      }
                    }
                  >
                    <div
                      className="react-swipeable-view-container"
                      style={
                        Object {
                          "WebkitFlexDirection": "row",
                          "WebkitTransition": "all 0s ease 0s",
                          "direction": "ltr",
                          "display": "flex",
                          "flexDirection": "row",
                          "height": null,
                          "transition": "all 0s ease 0s",
                          "willChange": "transform",
                        }
                      }
                    >
                      <div
                        aria-hidden={false}
                        data-swipeable="true"
                        key=".$0"
                        style={
                          Object {
                            "WebkitFlexShrink": 0,
                            "flexShrink": 0,
                            "overflow": "auto",
                            "padding": "0 5px",
                            "width": "100%",
                          }
                        }
                      >
                        <styled.div
                          key="0"
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bwzfXH",
                                  "isStatic": true,
                                  "lastClassName": "c1",
                                  "rules": Array [
                                    "
  margin: 8px 0;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bwzfXH",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c1"
                            >
                              <EventCard
                                catchMessage="説明です"
                                datetime="2018/12/01 09:30 〜"
                                eventUrl="https://connpass.com/"
                                expand={true}
                                history={null}
                                interactive={true}
                                place="晴海"
                                title="タイトル0"
                              >
                                <CustomCard
                                  expand={true}
                                  history={null}
                                  interactive={true}
                                  url="https://connpass.com/"
                                >
                                  <Styled(Blueprint3.Card)
                                    elevation={2}
                                    expand={1}
                                    onClick={[Function]}
                                  >
                                    <StyledComponent
                                      elevation={2}
                                      expand={1}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bdVaJa",
                                            "isStatic": false,
                                            "lastClassName": "c4",
                                            "rules": Array [
                                              "
  min-height: ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "Styled(Blueprint3.Card)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bdVaJa",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                          Symbol(Symbol.hasInstance): [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      onClick={[Function]}
                                    >
                                      <Blueprint3.Card
                                        className="c2"
                                        elevation={2}
                                        expand={1}
                                        interactive={false}
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="bp3-card bp3-elevation-2 c2"
                                          expand={1}
                                          onClick={[Function]}
                                        >
                                          <h3
                                            className="bp3-heading"
                                          >
                                            タイトル0
                                          </h3>
                                          <Blueprint3.Text>
                                            <div
                                              className=""
                                            >
                                              概要：説明です
                                            </div>
                                          </Blueprint3.Text>
                                          <Blueprint3.Text>
                                            <div
                                              className=""
                                            >
                                              場所：晴海
                                            </div>
                                          </Blueprint3.Text>
                                          <Blueprint3.Text>
                                            <div
                                              className=""
                                            >
                                              日時：2018/12/01 09:30 〜
                                            </div>
                                          </Blueprint3.Text>
                                        </div>
                                      </Blueprint3.Card>
                                    </StyledComponent>
                                  </Styled(Blueprint3.Card)>
                                </CustomCard>
                              </EventCard>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
              </ShrinkSwipeable>
            </AsyncSwipeable>
            <Component>
              <h3
                className="bp3-heading"
              >
                <Link
                  replace={false}
                  to="/events/organized"
                >
                  <a
                    onClick={[Function]}
                  >
                    主催イベント
                  </a>
                </Link>
              </h3>
            </Component>
            <AsyncSwipeable
              loading={false}
            >
              <ShrinkSwipeable>
                <ReactSwipableView
                  animateHeight={false}
                  animateTransitions={true}
                  axis="x"
                  disableLazyLoading={false}
                  disabled={false}
                  enableMouseEvents={true}
                  hysteresis={0.4}
                  ignoreNativeScroll={false}
                  index={0}
                  resistance={false}
                  slideStyle={
                    Object {
                      "padding": "0 5px",
                    }
                  }
                  springConfig={
                    Object {
                      "delay": "0s",
                      "duration": "0.35s",
                      "easeFunction": "cubic-bezier(0.15, 0.3, 0.25, 1)",
                    }
                  }
                  style={
                    Object {
                      "padding": "0 15px",
                    }
                  }
                  threshold={5}
                >
                  <div
                    onMouseDown={[Function]}
                    onMouseLeave={[Function]}
                    onMouseMove={[Function]}
                    onMouseUp={[Function]}
                    onScroll={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    style={
                      Object {
                        "overflowX": "hidden",
                        "padding": "0 15px",
                      }
                    }
                  >
                    <div
                      className="react-swipeable-view-container"
                      style={
                        Object {
                          "WebkitFlexDirection": "row",
                          "WebkitTransition": "all 0s ease 0s",
                          "direction": "ltr",
                          "display": "flex",
                          "flexDirection": "row",
                          "height": null,
                          "transition": "all 0s ease 0s",
                          "willChange": "transform",
                        }
                      }
                    >
                      <div
                        aria-hidden={false}
                        data-swipeable="true"
                        key=".0"
                        style={
                          Object {
                            "WebkitFlexShrink": 0,
                            "flexShrink": 0,
                            "overflow": "auto",
                            "padding": "0 5px",
                            "width": "100%",
                          }
                        }
                      >
                        <styled.div>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "
  margin: 8px 0;
  text-align: center;
",
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              <CustomCard
                                expand={false}
                                history={null}
                                url="/events/new"
                              >
                                <Styled(Blueprint3.Card)
                                  elevation={2}
                                  expand={0}
                                  onClick={[Function]}
                                >
                                  <StyledComponent
                                    elevation={2}
                                    expand={0}
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bdVaJa",
                                          "isStatic": false,
                                          "lastClassName": "c4",
                                          "rules": Array [
                                            "
  min-height: ",
                                            [Function],
                                            ";
",
                                          ],
                                        },
                                        "displayName": "Styled(Blueprint3.Card)",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bdVaJa",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                        Symbol(Symbol.hasInstance): [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    onClick={[Function]}
                                  >
                                    <Blueprint3.Card
                                      className="c4"
                                      elevation={2}
                                      expand={0}
                                      interactive={false}
                                      onClick={[Function]}
                                    >
                                      <div
                                        className="bp3-card bp3-elevation-2 c4"
                                        expand={0}
                                        onClick={[Function]}
                                      >
                                        <Component>
                                          <h3
                                            className="bp3-heading"
                                          >
                                            <Blueprint3.Icon
                                              icon="plus"
                                              iconSize={28}
                                            >
                                              <span
                                                className="bp3-icon bp3-icon-plus"
                                                icon="plus"
                                              >
                                                <svg
                                                  data-icon="plus"
                                                  height={28}
                                                  viewBox="0 0 20 20"
                                                  width={28}
                                                >
                                                  <desc>
                                                    plus
                                                  </desc>
                                                  <path
                                                    d="M16 9h-5V4c0-.55-.45-1-1-1s-1 .45-1 1v5H4c-.55 0-1 .45-1 1s.45 1 1 1h5v5c0 .55.45 1 1 1s1-.45 1-1v-5h5c.55 0 1-.45 1-1s-.45-1-1-1z"
                                                    fillRule="evenodd"
                                                    key="0"
                                                  />
                                                </svg>
                                              </span>
                                            </Blueprint3.Icon>
                                             イベント作成
                                          </h3>
                                        </Component>
                                      </div>
                                    </Blueprint3.Card>
                                  </StyledComponent>
                                </Styled(Blueprint3.Card)>
                              </CustomCard>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </div>
                    </div>
                  </div>
                </ReactSwipableView>
              </ShrinkSwipeable>
            </AsyncSwipeable>
          </div>
        </StyledComponent>
      </styled.div>
    </Container>
  </Menu>
</MockRouter>
`;
