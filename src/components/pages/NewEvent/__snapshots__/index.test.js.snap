// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: NewEvent/nomal 1`] = `
.c0 {
  padding: 10px 15px;
}

<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <NewEvent
    createEvent={[MockFunction]}
  >
    <Container
      authUser={null}
      noPadding={false}
    >
      <withRouter()
        authUser={null}
      >
        <Route>
          <Component
            authUser={null}
            history={
              Object {
                "createHref": [Function],
                "path": "",
                "push": [Function],
                "replace": [Function],
              }
            }
            location=""
            match={
              Object {
                "params": Object {},
                "path": "",
                "url": "",
              }
            }
          >
            <NavigationBar
              authUser={null}
              firebase={null}
              history={
                Object {
                  "createHref": [Function],
                  "path": "",
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location=""
              match={
                Object {
                  "params": Object {},
                  "path": "",
                  "url": "",
                }
              }
            >
              <Blueprint3.Navbar>
                <div
                  className="bp3-navbar"
                >
                  <Blueprint3.NavbarGroup
                    align="left"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-left"
                    >
                      <Blueprint3.NavbarHeading>
                        <div
                          className="bp3-navbar-heading"
                        >
                          IPPO
                        </div>
                      </Blueprint3.NavbarHeading>
                      <Blueprint3.NavbarDivider>
                        <div
                          className="bp3-navbar-divider"
                        />
                      </Blueprint3.NavbarDivider>
                    </div>
                  </Blueprint3.NavbarGroup>
                  <Blueprint3.NavbarGroup
                    align="right"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-right"
                    >
                      <Blueprint3.Button
                        icon="notifications"
                        minimal={true}
                        onClick={[Function]}
                      >
                        <button
                          className="bp3-button bp3-minimal"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          type="button"
                        >
                          <Blueprint3.Icon
                            icon="notifications"
                            key="leftIcon"
                          >
                            <span
                              className="bp3-icon bp3-icon-notifications"
                              icon="notifications"
                            >
                              <svg
                                data-icon="notifications"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <desc>
                                  notifications
                                </desc>
                                <path
                                  d="M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 0 0 3 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                          <Blueprint3.Icon
                            key="rightIcon"
                          />
                        </button>
                      </Blueprint3.Button>
                    </div>
                  </Blueprint3.NavbarGroup>
                </div>
              </Blueprint3.Navbar>
            </NavigationBar>
          </Component>
        </Route>
      </withRouter()>
      <styled.div
        noPadding={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          noPadding={false}
        >
          <div
            className="c0"
          >
            <EventCreateForm
              onSubmit={[Function]}
            >
              <form>
                <Blueprint3.FormGroup
                  label="イベント名"
                  labelFor="title"
                  labelInfo="(必須)"
                >
                  <div
                    className="bp3-form-group"
                  >
                    <label
                      className="bp3-label"
                      htmlFor="title"
                    >
                      イベント名
                       
                      <span
                        className="bp3-text-muted"
                      >
                        (必須)
                      </span>
                    </label>
                    <div
                      className="bp3-form-content"
                    >
                      <Blueprint3.InputGroup
                        id="title"
                        large={true}
                        name="title"
                        onChange={[Function]}
                        value=""
                      >
                        <div
                          className="bp3-input-group bp3-large"
                        >
                          <Blueprint3.Icon />
                          <input
                            className="bp3-input"
                            id="title"
                            name="title"
                            onChange={[Function]}
                            style={
                              Object {
                                "paddingRight": 10,
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                      </Blueprint3.InputGroup>
                    </div>
                  </div>
                </Blueprint3.FormGroup>
                <Blueprint3.FormGroup
                  label="概要"
                  labelFor="catchMessage"
                >
                  <div
                    className="bp3-form-group"
                  >
                    <label
                      className="bp3-label"
                      htmlFor="catchMessage"
                    >
                      概要
                       
                      <span
                        className="bp3-text-muted"
                      />
                    </label>
                    <div
                      className="bp3-form-content"
                    >
                      <Blueprint3.InputGroup
                        id="catchMessage"
                        large={true}
                        name="catchMessage"
                        onChange={[Function]}
                        value=""
                      >
                        <div
                          className="bp3-input-group bp3-large"
                        >
                          <Blueprint3.Icon />
                          <input
                            className="bp3-input"
                            id="catchMessage"
                            name="catchMessage"
                            onChange={[Function]}
                            style={
                              Object {
                                "paddingRight": 10,
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                      </Blueprint3.InputGroup>
                    </div>
                  </div>
                </Blueprint3.FormGroup>
                <Blueprint3.FormGroup
                  label="場所"
                  labelFor="place"
                >
                  <div
                    className="bp3-form-group"
                  >
                    <label
                      className="bp3-label"
                      htmlFor="place"
                    >
                      場所
                       
                      <span
                        className="bp3-text-muted"
                      />
                    </label>
                    <div
                      className="bp3-form-content"
                    >
                      <Blueprint3.InputGroup
                        id="place"
                        large={true}
                        name="place"
                        onChange={[Function]}
                        value=""
                      >
                        <div
                          className="bp3-input-group bp3-large"
                        >
                          <Blueprint3.Icon />
                          <input
                            className="bp3-input"
                            id="place"
                            name="place"
                            onChange={[Function]}
                            style={
                              Object {
                                "paddingRight": 10,
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                      </Blueprint3.InputGroup>
                    </div>
                  </div>
                </Blueprint3.FormGroup>
                <Blueprint3.FormGroup
                  label="ハッシュタグ"
                  labelFor="hashtag"
                  labelInfo="(必須)"
                >
                  <div
                    className="bp3-form-group"
                  >
                    <label
                      className="bp3-label"
                      htmlFor="hashtag"
                    >
                      ハッシュタグ
                       
                      <span
                        className="bp3-text-muted"
                      >
                        (必須)
                      </span>
                    </label>
                    <div
                      className="bp3-form-content"
                    >
                      <Blueprint3.InputGroup
                        id="hashtag"
                        large={true}
                        name="hashtag"
                        onChange={[Function]}
                        value=""
                      >
                        <div
                          className="bp3-input-group bp3-large"
                        >
                          <Blueprint3.Icon />
                          <input
                            className="bp3-input"
                            id="hashtag"
                            name="hashtag"
                            onChange={[Function]}
                            style={
                              Object {
                                "paddingRight": 10,
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                      </Blueprint3.InputGroup>
                    </div>
                  </div>
                </Blueprint3.FormGroup>
                <Blueprint3.FormGroup
                  label="開始日時"
                  labelFor="startedAt"
                >
                  <div
                    className="bp3-form-group"
                  >
                    <label
                      className="bp3-label"
                      htmlFor="startedAt"
                    >
                      開始日時
                       
                      <span
                        className="bp3-text-muted"
                      />
                    </label>
                    <div
                      className="bp3-form-content"
                    >
                      <Blueprint3.InputGroup
                        id="startedAt"
                        large={true}
                        name="startedAt"
                        onChange={[Function]}
                        placeholder="2018/1/23 9:30"
                        value=""
                      >
                        <div
                          className="bp3-input-group bp3-large"
                        >
                          <Blueprint3.Icon />
                          <input
                            className="bp3-input"
                            id="startedAt"
                            name="startedAt"
                            onChange={[Function]}
                            placeholder="2018/1/23 9:30"
                            style={
                              Object {
                                "paddingRight": 10,
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                      </Blueprint3.InputGroup>
                    </div>
                  </div>
                </Blueprint3.FormGroup>
                <Blueprint3.FormGroup
                  label="終了日時"
                  labelFor="endedAt"
                >
                  <div
                    className="bp3-form-group"
                  >
                    <label
                      className="bp3-label"
                      htmlFor="endedAt"
                    >
                      終了日時
                       
                      <span
                        className="bp3-text-muted"
                      />
                    </label>
                    <div
                      className="bp3-form-content"
                    >
                      <Blueprint3.InputGroup
                        id="endedAt"
                        large={true}
                        name="endedAt"
                        onChange={[Function]}
                        placeholder="2018/1/23 9:30"
                        value=""
                      >
                        <div
                          className="bp3-input-group bp3-large"
                        >
                          <Blueprint3.Icon />
                          <input
                            className="bp3-input"
                            id="endedAt"
                            name="endedAt"
                            onChange={[Function]}
                            placeholder="2018/1/23 9:30"
                            style={
                              Object {
                                "paddingRight": 10,
                              }
                            }
                            type="text"
                            value=""
                          />
                        </div>
                      </Blueprint3.InputGroup>
                    </div>
                  </div>
                </Blueprint3.FormGroup>
                <Blueprint3.Button
                  disabled={true}
                  fill={true}
                  large={true}
                  onClick={[Function]}
                  text="作成"
                >
                  <button
                    className="bp3-button bp3-disabled bp3-fill bp3-large"
                    disabled={true}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    tabIndex={-1}
                    type="button"
                  >
                    <Blueprint3.Icon
                      key="leftIcon"
                    />
                    <span
                      className="bp3-button-text"
                      key="text"
                    >
                      作成
                    </span>
                    <Blueprint3.Icon
                      key="rightIcon"
                    />
                  </button>
                </Blueprint3.Button>
              </form>
            </EventCreateForm>
          </div>
        </StyledComponent>
      </styled.div>
    </Container>
  </NewEvent>
</MockRouter>
`;
