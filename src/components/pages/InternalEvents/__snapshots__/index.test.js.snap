// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: InternalEvents/loading 1`] = `
.c0 {
  padding: 10px 15px;
}

<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <InternalEvents
    authUser={null}
    data={
      Object {
        "internalEvents": null,
        "loading": true,
      }
    }
  >
    <Container
      authUser={null}
      noPadding={false}
    >
      <withRouter()
        authUser={null}
      >
        <Route>
          <Component
            authUser={null}
            history={
              Object {
                "createHref": [Function],
                "path": "",
                "push": [Function],
                "replace": [Function],
              }
            }
            location=""
            match={
              Object {
                "params": Object {},
                "path": "",
                "url": "",
              }
            }
          >
            <NavigationBar
              authUser={null}
              firebase={null}
              history={
                Object {
                  "createHref": [Function],
                  "path": "",
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location=""
              match={
                Object {
                  "params": Object {},
                  "path": "",
                  "url": "",
                }
              }
            >
              <Blueprint3.Navbar>
                <div
                  className="bp3-navbar"
                >
                  <Blueprint3.NavbarGroup
                    align="left"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-left"
                    >
                      <Blueprint3.NavbarHeading>
                        <div
                          className="bp3-navbar-heading"
                        >
                          IPPO
                        </div>
                      </Blueprint3.NavbarHeading>
                      <Blueprint3.NavbarDivider>
                        <div
                          className="bp3-navbar-divider"
                        />
                      </Blueprint3.NavbarDivider>
                    </div>
                  </Blueprint3.NavbarGroup>
                  <Blueprint3.NavbarGroup
                    align="right"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-right"
                    >
                      <Blueprint3.Button
                        icon="notifications"
                        minimal={true}
                        onClick={[Function]}
                      >
                        <button
                          className="bp3-button bp3-minimal"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          type="button"
                        >
                          <Blueprint3.Icon
                            icon="notifications"
                            key="leftIcon"
                          >
                            <span
                              className="bp3-icon bp3-icon-notifications"
                              icon="notifications"
                            >
                              <svg
                                data-icon="notifications"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <desc>
                                  notifications
                                </desc>
                                <path
                                  d="M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 0 0 3 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                          <Blueprint3.Icon
                            key="rightIcon"
                          />
                        </button>
                      </Blueprint3.Button>
                    </div>
                  </Blueprint3.NavbarGroup>
                </div>
              </Blueprint3.Navbar>
            </NavigationBar>
          </Component>
        </Route>
      </withRouter()>
      <styled.div
        noPadding={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          noPadding={false}
        >
          <div
            className="c0"
          >
            <Blueprint3.Spinner>
              <div
                className="bp3-spinner"
              >
                <div
                  className="bp3-spinner-animation"
                >
                  <svg
                    height={50}
                    strokeWidth="8.00"
                    viewBox="1.00 1.00 98.00 98.00"
                    width={50}
                  >
                    <path
                      className="bp3-spinner-track"
                      d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                    />
                    <path
                      className="bp3-spinner-head"
                      d="M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90"
                      pathLength={280}
                      strokeDasharray="280 280"
                      strokeDashoffset={210}
                    />
                  </svg>
                </div>
              </div>
            </Blueprint3.Spinner>
          </div>
        </StyledComponent>
      </styled.div>
    </Container>
  </InternalEvents>
</MockRouter>
`;

exports[`should match snapshot: InternalEvents/nocontents 1`] = `
.c0 {
  padding: 10px 15px;
}

<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <InternalEvents
    authUser={null}
    data={
      Object {
        "internalEvents": null,
        "loading": false,
      }
    }
  >
    <Container
      authUser={null}
      noPadding={false}
    >
      <withRouter()
        authUser={null}
      >
        <Route>
          <Component
            authUser={null}
            history={
              Object {
                "createHref": [Function],
                "path": "",
                "push": [Function],
                "replace": [Function],
              }
            }
            location=""
            match={
              Object {
                "params": Object {},
                "path": "",
                "url": "",
              }
            }
          >
            <NavigationBar
              authUser={null}
              firebase={null}
              history={
                Object {
                  "createHref": [Function],
                  "path": "",
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location=""
              match={
                Object {
                  "params": Object {},
                  "path": "",
                  "url": "",
                }
              }
            >
              <Blueprint3.Navbar>
                <div
                  className="bp3-navbar"
                >
                  <Blueprint3.NavbarGroup
                    align="left"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-left"
                    >
                      <Blueprint3.NavbarHeading>
                        <div
                          className="bp3-navbar-heading"
                        >
                          IPPO
                        </div>
                      </Blueprint3.NavbarHeading>
                      <Blueprint3.NavbarDivider>
                        <div
                          className="bp3-navbar-divider"
                        />
                      </Blueprint3.NavbarDivider>
                    </div>
                  </Blueprint3.NavbarGroup>
                  <Blueprint3.NavbarGroup
                    align="right"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-right"
                    >
                      <Blueprint3.Button
                        icon="notifications"
                        minimal={true}
                        onClick={[Function]}
                      >
                        <button
                          className="bp3-button bp3-minimal"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          type="button"
                        >
                          <Blueprint3.Icon
                            icon="notifications"
                            key="leftIcon"
                          >
                            <span
                              className="bp3-icon bp3-icon-notifications"
                              icon="notifications"
                            >
                              <svg
                                data-icon="notifications"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <desc>
                                  notifications
                                </desc>
                                <path
                                  d="M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 0 0 3 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                          <Blueprint3.Icon
                            key="rightIcon"
                          />
                        </button>
                      </Blueprint3.Button>
                    </div>
                  </Blueprint3.NavbarGroup>
                </div>
              </Blueprint3.Navbar>
            </NavigationBar>
          </Component>
        </Route>
      </withRouter()>
      <styled.div
        noPadding={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          noPadding={false}
        >
          <div
            className="c0"
          >
            <Blueprint3.Text>
              <div
                className=""
              >
                No Contents
              </div>
            </Blueprint3.Text>
          </div>
        </StyledComponent>
      </styled.div>
    </Container>
  </InternalEvents>
</MockRouter>
`;

exports[`should match snapshot: InternalEvents/nomal 1`] = `
.c2 {
  min-height: inherit;
}

.c0 {
  padding: 10px 15px;
}

.c1 {
  margin: 8px 0;
}

<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <InternalEvents
    authUser={null}
    data={
      Object {
        "internalEvents": Array [
          Object {
            "catchMessage": "イベントの説明です",
            "id": "0",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル0",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "1",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル1",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "2",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル2",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "3",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル3",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "4",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル4",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "5",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル5",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "6",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル6",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "7",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル7",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "8",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル8",
          },
          Object {
            "catchMessage": "イベントの説明です",
            "id": "9",
            "place": "東京都千代田区丸の内",
            "startedAt": "2018/12/1 10:30",
            "title": "イベントのタイトル9",
          },
        ],
        "loading": false,
      }
    }
  >
    <Container
      authUser={null}
      noPadding={false}
    >
      <withRouter()
        authUser={null}
      >
        <Route>
          <Component
            authUser={null}
            history={
              Object {
                "createHref": [Function],
                "path": "",
                "push": [Function],
                "replace": [Function],
              }
            }
            location=""
            match={
              Object {
                "params": Object {},
                "path": "",
                "url": "",
              }
            }
          >
            <NavigationBar
              authUser={null}
              firebase={null}
              history={
                Object {
                  "createHref": [Function],
                  "path": "",
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location=""
              match={
                Object {
                  "params": Object {},
                  "path": "",
                  "url": "",
                }
              }
            >
              <Blueprint3.Navbar>
                <div
                  className="bp3-navbar"
                >
                  <Blueprint3.NavbarGroup
                    align="left"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-left"
                    >
                      <Blueprint3.NavbarHeading>
                        <div
                          className="bp3-navbar-heading"
                        >
                          IPPO
                        </div>
                      </Blueprint3.NavbarHeading>
                      <Blueprint3.NavbarDivider>
                        <div
                          className="bp3-navbar-divider"
                        />
                      </Blueprint3.NavbarDivider>
                    </div>
                  </Blueprint3.NavbarGroup>
                  <Blueprint3.NavbarGroup
                    align="right"
                  >
                    <div
                      className="bp3-navbar-group bp3-align-right"
                    >
                      <Blueprint3.Button
                        icon="notifications"
                        minimal={true}
                        onClick={[Function]}
                      >
                        <button
                          className="bp3-button bp3-minimal"
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          type="button"
                        >
                          <Blueprint3.Icon
                            icon="notifications"
                            key="leftIcon"
                          >
                            <span
                              className="bp3-icon bp3-icon-notifications"
                              icon="notifications"
                            >
                              <svg
                                data-icon="notifications"
                                height={16}
                                viewBox="0 0 16 16"
                                width={16}
                              >
                                <desc>
                                  notifications
                                </desc>
                                <path
                                  d="M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 0 0 3 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"
                                  fillRule="evenodd"
                                  key="0"
                                />
                              </svg>
                            </span>
                          </Blueprint3.Icon>
                          <Blueprint3.Icon
                            key="rightIcon"
                          />
                        </button>
                      </Blueprint3.Button>
                    </div>
                  </Blueprint3.NavbarGroup>
                </div>
              </Blueprint3.Navbar>
            </NavigationBar>
          </Component>
        </Route>
      </withRouter()>
      <styled.div
        noPadding={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          noPadding={false}
        >
          <div
            className="c0"
          >
            <styled.div
              key="0"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル0"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル0
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="1"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル1"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル1
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="2"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル2"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル2
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="3"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル3"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル3
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="4"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル4"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル4
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="5"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル5"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル5
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="6"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル6"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル6
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="7"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル7"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル7
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="8"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル8"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル8
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div
              key="9"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-htpNat",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  margin: 8px 0;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-htpNat",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <EventCard
                    catchMessage="イベントの説明です"
                    datetime="2018/12/01 10:30〜"
                    eventUrl=""
                    expand={false}
                    history={null}
                    interactive={true}
                    place="東京都千代田区丸の内"
                    title="イベントのタイトル9"
                  >
                    <CustomCard
                      expand={false}
                      history={null}
                      interactive={true}
                      url=""
                    >
                      <Styled(Blueprint3.Card)
                        elevation={2}
                        expand={0}
                        onClick={[Function]}
                      >
                        <StyledComponent
                          elevation={2}
                          expand={0}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": false,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  min-height: ",
                                  [Function],
                                  ";
",
                                ],
                              },
                              "displayName": "Styled(Blueprint3.Card)",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <Blueprint3.Card
                            className="c2"
                            elevation={2}
                            expand={0}
                            interactive={false}
                            onClick={[Function]}
                          >
                            <div
                              className="bp3-card bp3-elevation-2 c2"
                              expand={0}
                              onClick={[Function]}
                            >
                              <h3
                                className="bp3-heading"
                              >
                                イベントのタイトル9
                              </h3>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  概要：イベントの説明です
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  場所：東京都千代田区丸の内
                                </div>
                              </Blueprint3.Text>
                              <Blueprint3.Text>
                                <div
                                  className=""
                                >
                                  日時：2018/12/01 10:30〜
                                </div>
                              </Blueprint3.Text>
                            </div>
                          </Blueprint3.Card>
                        </StyledComponent>
                      </Styled(Blueprint3.Card)>
                    </CustomCard>
                  </EventCard>
                </div>
              </StyledComponent>
            </styled.div>
          </div>
        </StyledComponent>
      </styled.div>
    </Container>
  </InternalEvents>
</MockRouter>
`;
