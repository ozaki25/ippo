// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: Signin/nomal 1`] = `
.c4 {
  cursor: pointer;
}

.c4:active {
  opacity: 0.4;
}

.c0 {
  padding: 5px 10px;
}

.c3 {
  margin: 8px 0;
  text-align: center;
}

.c1 {
  text-align: center;
  margin: 60px 0 30px;
}

.c2 {
  max-width: 60%;
}

<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MockRouter
    createHref={[Function]}
    location=""
    params={Object {}}
    path=""
    push={[Function]}
    replace={[Function]}
    url=""
  >
    <WithStyles(Signin)
      firebase={
        Object {
          "auth": Object {
            "getRedirectResult": [MockFunction],
          },
          "doSignInWithEmailAndPassword": [MockFunction],
          "doSignInWithGoogle": [MockFunction],
          "doSignOut": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "isThrow": false,
                "value": undefined,
              },
            ],
          },
        }
      }
      history={
        Object {
          "push": [MockFunction],
          "replace": [MockFunction],
        }
      }
    >
      <Signin
        classes={
          Object {
            "nonCaps": "Signin-nonCaps-1",
          }
        }
        firebase={
          Object {
            "auth": Object {
              "getRedirectResult": [MockFunction],
            },
            "doSignInWithEmailAndPassword": [MockFunction],
            "doSignInWithGoogle": [MockFunction],
            "doSignOut": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
          }
        }
        history={
          Object {
            "push": [MockFunction],
            "replace": [MockFunction],
          }
        }
      >
        <Container
          authUser={null}
          back={false}
          firebase={
            Object {
              "auth": Object {
                "getRedirectResult": [MockFunction],
              },
              "doSignInWithEmailAndPassword": [MockFunction],
              "doSignInWithGoogle": [MockFunction],
              "doSignOut": [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
            }
          }
          header={false}
          history={
            Object {
              "push": [MockFunction],
              "replace": [MockFunction],
            }
          }
          noPadding={false}
          title=""
        >
          <styled.div
            noPadding={false}
          >
            <StyledComponent
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      "
  padding: ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              noPadding={false}
            >
              <div
                className="c0"
              >
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-gzVnrw",
                          "isStatic": true,
                          "lastClassName": "c1",
                          "rules": Array [
                            "
  text-align: center;
  margin: 60px 0 30px;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-gzVnrw",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c1"
                    >
                      <styled.img
                        alt="IPPO"
                        src="/images/ippo.png"
                      >
                        <StyledComponent
                          alt="IPPO"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-htoDjs",
                                "isStatic": true,
                                "lastClassName": "c2",
                                "rules": Array [
                                  "
  max-width: 60%;
",
                                ],
                              },
                              "displayName": "styled.img",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-htoDjs",
                              "target": "img",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          src="/images/ippo.png"
                        >
                          <img
                            alt="IPPO"
                            className="c2"
                            src="/images/ippo.png"
                          />
                        </StyledComponent>
                      </styled.img>
                    </div>
                  </StyledComponent>
                </styled.div>
                <SigninForm
                  onSubmit={[Function]}
                >
                  <form>
                    <TextField
                      color="primary"
                      fullWidth={true}
                      label="メールアドレス"
                      margin="normal"
                      name="email"
                      onChange={[Function]}
                      required={false}
                      select={false}
                      value=""
                      variant="standard"
                    >
                      <WithStyles(FormControl)
                        color="primary"
                        fullWidth={true}
                        margin="normal"
                        required={false}
                        variant="standard"
                      >
                        <FormControl
                          classes={
                            Object {
                              "fullWidth": "MuiFormControl-fullWidth-5",
                              "marginDense": "MuiFormControl-marginDense-4",
                              "marginNormal": "MuiFormControl-marginNormal-3",
                              "root": "MuiFormControl-root-2",
                            }
                          }
                          color="primary"
                          component="div"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          margin="normal"
                          required={false}
                          variant="standard"
                        >
                          <div
                            className="MuiFormControl-root-2 MuiFormControl-marginNormal-3 MuiFormControl-fullWidth-5"
                            color="primary"
                          >
                            <WithStyles(WithFormControlContext(InputLabel))>
                              <WithFormControlContext(InputLabel)
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated-14",
                                    "disabled": "MuiInputLabel-disabled-8",
                                    "error": "MuiInputLabel-error-9",
                                    "filled": "MuiInputLabel-filled-15",
                                    "focused": "MuiInputLabel-focused-7",
                                    "formControl": "MuiInputLabel-formControl-11",
                                    "marginDense": "MuiInputLabel-marginDense-12",
                                    "outlined": "MuiInputLabel-outlined-16",
                                    "required": "MuiInputLabel-required-10",
                                    "root": "MuiInputLabel-root-6",
                                    "shrink": "MuiInputLabel-shrink-13",
                                  }
                                }
                              >
                                <InputLabel
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated-14",
                                      "disabled": "MuiInputLabel-disabled-8",
                                      "error": "MuiInputLabel-error-9",
                                      "filled": "MuiInputLabel-filled-15",
                                      "focused": "MuiInputLabel-focused-7",
                                      "formControl": "MuiInputLabel-formControl-11",
                                      "marginDense": "MuiInputLabel-marginDense-12",
                                      "outlined": "MuiInputLabel-outlined-16",
                                      "required": "MuiInputLabel-required-10",
                                      "root": "MuiInputLabel-root-6",
                                      "shrink": "MuiInputLabel-shrink-13",
                                    }
                                  }
                                  disableAnimation={false}
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                >
                                  <WithStyles(WithFormControlContext(FormLabel))
                                    className="MuiInputLabel-root-6 MuiInputLabel-formControl-11 MuiInputLabel-animated-14"
                                    classes={
                                      Object {
                                        "disabled": "MuiInputLabel-disabled-8",
                                        "error": "MuiInputLabel-error-9",
                                        "focused": "MuiInputLabel-focused-7",
                                        "required": "MuiInputLabel-required-10",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <WithFormControlContext(FormLabel)
                                      className="MuiInputLabel-root-6 MuiInputLabel-formControl-11 MuiInputLabel-animated-14"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk-23",
                                          "disabled": "MuiFormLabel-disabled-19 MuiInputLabel-disabled-8",
                                          "error": "MuiFormLabel-error-20 MuiInputLabel-error-9",
                                          "filled": "MuiFormLabel-filled-21",
                                          "focused": "MuiFormLabel-focused-18 MuiInputLabel-focused-7",
                                          "required": "MuiFormLabel-required-22 MuiInputLabel-required-10",
                                          "root": "MuiFormLabel-root-17",
                                        }
                                      }
                                      data-shrink={false}
                                    >
                                      <FormLabel
                                        className="MuiInputLabel-root-6 MuiInputLabel-formControl-11 MuiInputLabel-animated-14"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk-23",
                                            "disabled": "MuiFormLabel-disabled-19 MuiInputLabel-disabled-8",
                                            "error": "MuiFormLabel-error-20 MuiInputLabel-error-9",
                                            "filled": "MuiFormLabel-filled-21",
                                            "focused": "MuiFormLabel-focused-18 MuiInputLabel-focused-7",
                                            "required": "MuiFormLabel-required-22 MuiInputLabel-required-10",
                                            "root": "MuiFormLabel-root-17",
                                          }
                                        }
                                        component="label"
                                        data-shrink={false}
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": false,
                                            "variant": "standard",
                                          }
                                        }
                                      >
                                        <label
                                          className="MuiFormLabel-root-17 MuiInputLabel-root-6 MuiInputLabel-formControl-11 MuiInputLabel-animated-14"
                                          data-shrink={false}
                                        >
                                          メールアドレス
                                        </label>
                                      </FormLabel>
                                    </WithFormControlContext(FormLabel)>
                                  </WithStyles(WithFormControlContext(FormLabel))>
                                </InputLabel>
                              </WithFormControlContext(InputLabel)>
                            </WithStyles(WithFormControlContext(InputLabel))>
                            <WithStyles(Input)
                              fullWidth={true}
                              name="email"
                              onChange={[Function]}
                              value=""
                            >
                              <Input
                                classes={
                                  Object {
                                    "disabled": "MuiInput-disabled-27",
                                    "error": "MuiInput-error-29",
                                    "focused": "MuiInput-focused-26",
                                    "formControl": "MuiInput-formControl-25",
                                    "fullWidth": "MuiInput-fullWidth-31",
                                    "input": "MuiInput-input-32",
                                    "inputMarginDense": "MuiInput-inputMarginDense-33",
                                    "inputMultiline": "MuiInput-inputMultiline-34",
                                    "inputType": "MuiInput-inputType-35",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch-36",
                                    "multiline": "MuiInput-multiline-30",
                                    "root": "MuiInput-root-24",
                                    "underline": "MuiInput-underline-28",
                                  }
                                }
                                fullWidth={true}
                                name="email"
                                onChange={[Function]}
                                value=""
                              >
                                <WithStyles(WithFormControlContext(InputBase))
                                  classes={
                                    Object {
                                      "disabled": "MuiInput-disabled-27",
                                      "error": "MuiInput-error-29",
                                      "focused": "MuiInput-focused-26",
                                      "formControl": "MuiInput-formControl-25",
                                      "fullWidth": "MuiInput-fullWidth-31",
                                      "input": "MuiInput-input-32",
                                      "inputMarginDense": "MuiInput-inputMarginDense-33",
                                      "inputMultiline": "MuiInput-inputMultiline-34",
                                      "inputType": "MuiInput-inputType-35",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch-36",
                                      "multiline": "MuiInput-multiline-30",
                                      "root": "MuiInput-root-24 MuiInput-underline-28",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  multiline={false}
                                  name="email"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <WithFormControlContext(InputBase)
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd-42",
                                        "adornedStart": "MuiInputBase-adornedStart-41",
                                        "disabled": "MuiInputBase-disabled-40 MuiInput-disabled-27",
                                        "error": "MuiInputBase-error-43 MuiInput-error-29",
                                        "focused": "MuiInputBase-focused-39 MuiInput-focused-26",
                                        "formControl": "MuiInputBase-formControl-38 MuiInput-formControl-25",
                                        "fullWidth": "MuiInputBase-fullWidth-46 MuiInput-fullWidth-31",
                                        "input": "MuiInputBase-input-47 MuiInput-input-32",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-53",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-52",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense-48 MuiInput-inputMarginDense-33",
                                        "inputMultiline": "MuiInputBase-inputMultiline-49 MuiInput-inputMultiline-34",
                                        "inputType": "MuiInputBase-inputType-50 MuiInput-inputType-35",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-51 MuiInput-inputTypeSearch-36",
                                        "marginDense": "MuiInputBase-marginDense-44",
                                        "multiline": "MuiInputBase-multiline-45 MuiInput-multiline-30",
                                        "root": "MuiInputBase-root-37 MuiInput-root-24 MuiInput-underline-28",
                                      }
                                    }
                                    fullWidth={true}
                                    inputComponent="input"
                                    multiline={false}
                                    name="email"
                                    onChange={[Function]}
                                    type="text"
                                    value=""
                                  >
                                    <InputBase
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiInputBase-adornedEnd-42",
                                          "adornedStart": "MuiInputBase-adornedStart-41",
                                          "disabled": "MuiInputBase-disabled-40 MuiInput-disabled-27",
                                          "error": "MuiInputBase-error-43 MuiInput-error-29",
                                          "focused": "MuiInputBase-focused-39 MuiInput-focused-26",
                                          "formControl": "MuiInputBase-formControl-38 MuiInput-formControl-25",
                                          "fullWidth": "MuiInputBase-fullWidth-46 MuiInput-fullWidth-31",
                                          "input": "MuiInputBase-input-47 MuiInput-input-32",
                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-53",
                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-52",
                                          "inputMarginDense": "MuiInputBase-inputMarginDense-48 MuiInput-inputMarginDense-33",
                                          "inputMultiline": "MuiInputBase-inputMultiline-49 MuiInput-inputMultiline-34",
                                          "inputType": "MuiInputBase-inputType-50 MuiInput-inputType-35",
                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-51 MuiInput-inputTypeSearch-36",
                                          "marginDense": "MuiInputBase-marginDense-44",
                                          "multiline": "MuiInputBase-multiline-45 MuiInput-multiline-30",
                                          "root": "MuiInputBase-root-37 MuiInput-root-24 MuiInput-underline-28",
                                        }
                                      }
                                      fullWidth={true}
                                      inputComponent="input"
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "margin": "normal",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "standard",
                                        }
                                      }
                                      multiline={false}
                                      name="email"
                                      onChange={[Function]}
                                      type="text"
                                      value=""
                                    >
                                      <div
                                        className="MuiInputBase-root-37 MuiInput-root-24 MuiInput-underline-28 MuiInputBase-fullWidth-46 MuiInput-fullWidth-31 MuiInputBase-formControl-38 MuiInput-formControl-25"
                                        onClick={[Function]}
                                      >
                                        <input
                                          aria-invalid={false}
                                          className="MuiInputBase-input-47 MuiInput-input-32"
                                          disabled={false}
                                          name="email"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          required={false}
                                          type="text"
                                          value=""
                                        />
                                      </div>
                                    </InputBase>
                                  </WithFormControlContext(InputBase)>
                                </WithStyles(WithFormControlContext(InputBase))>
                              </Input>
                            </WithStyles(Input)>
                          </div>
                        </FormControl>
                      </WithStyles(FormControl)>
                    </TextField>
                    <br />
                    <TextField
                      color="primary"
                      fullWidth={true}
                      label="パスワード"
                      margin="normal"
                      name="pass"
                      onChange={[Function]}
                      required={false}
                      select={false}
                      type="password"
                      value=""
                      variant="standard"
                    >
                      <WithStyles(FormControl)
                        color="primary"
                        fullWidth={true}
                        margin="normal"
                        required={false}
                        variant="standard"
                      >
                        <FormControl
                          classes={
                            Object {
                              "fullWidth": "MuiFormControl-fullWidth-5",
                              "marginDense": "MuiFormControl-marginDense-4",
                              "marginNormal": "MuiFormControl-marginNormal-3",
                              "root": "MuiFormControl-root-2",
                            }
                          }
                          color="primary"
                          component="div"
                          disabled={false}
                          error={false}
                          fullWidth={true}
                          margin="normal"
                          required={false}
                          variant="standard"
                        >
                          <div
                            className="MuiFormControl-root-2 MuiFormControl-marginNormal-3 MuiFormControl-fullWidth-5"
                            color="primary"
                          >
                            <WithStyles(WithFormControlContext(InputLabel))>
                              <WithFormControlContext(InputLabel)
                                classes={
                                  Object {
                                    "animated": "MuiInputLabel-animated-14",
                                    "disabled": "MuiInputLabel-disabled-8",
                                    "error": "MuiInputLabel-error-9",
                                    "filled": "MuiInputLabel-filled-15",
                                    "focused": "MuiInputLabel-focused-7",
                                    "formControl": "MuiInputLabel-formControl-11",
                                    "marginDense": "MuiInputLabel-marginDense-12",
                                    "outlined": "MuiInputLabel-outlined-16",
                                    "required": "MuiInputLabel-required-10",
                                    "root": "MuiInputLabel-root-6",
                                    "shrink": "MuiInputLabel-shrink-13",
                                  }
                                }
                              >
                                <InputLabel
                                  classes={
                                    Object {
                                      "animated": "MuiInputLabel-animated-14",
                                      "disabled": "MuiInputLabel-disabled-8",
                                      "error": "MuiInputLabel-error-9",
                                      "filled": "MuiInputLabel-filled-15",
                                      "focused": "MuiInputLabel-focused-7",
                                      "formControl": "MuiInputLabel-formControl-11",
                                      "marginDense": "MuiInputLabel-marginDense-12",
                                      "outlined": "MuiInputLabel-outlined-16",
                                      "required": "MuiInputLabel-required-10",
                                      "root": "MuiInputLabel-root-6",
                                      "shrink": "MuiInputLabel-shrink-13",
                                    }
                                  }
                                  disableAnimation={false}
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                >
                                  <WithStyles(WithFormControlContext(FormLabel))
                                    className="MuiInputLabel-root-6 MuiInputLabel-formControl-11 MuiInputLabel-animated-14"
                                    classes={
                                      Object {
                                        "disabled": "MuiInputLabel-disabled-8",
                                        "error": "MuiInputLabel-error-9",
                                        "focused": "MuiInputLabel-focused-7",
                                        "required": "MuiInputLabel-required-10",
                                      }
                                    }
                                    data-shrink={false}
                                  >
                                    <WithFormControlContext(FormLabel)
                                      className="MuiInputLabel-root-6 MuiInputLabel-formControl-11 MuiInputLabel-animated-14"
                                      classes={
                                        Object {
                                          "asterisk": "MuiFormLabel-asterisk-23",
                                          "disabled": "MuiFormLabel-disabled-19 MuiInputLabel-disabled-8",
                                          "error": "MuiFormLabel-error-20 MuiInputLabel-error-9",
                                          "filled": "MuiFormLabel-filled-21",
                                          "focused": "MuiFormLabel-focused-18 MuiInputLabel-focused-7",
                                          "required": "MuiFormLabel-required-22 MuiInputLabel-required-10",
                                          "root": "MuiFormLabel-root-17",
                                        }
                                      }
                                      data-shrink={false}
                                    >
                                      <FormLabel
                                        className="MuiInputLabel-root-6 MuiInputLabel-formControl-11 MuiInputLabel-animated-14"
                                        classes={
                                          Object {
                                            "asterisk": "MuiFormLabel-asterisk-23",
                                            "disabled": "MuiFormLabel-disabled-19 MuiInputLabel-disabled-8",
                                            "error": "MuiFormLabel-error-20 MuiInputLabel-error-9",
                                            "filled": "MuiFormLabel-filled-21",
                                            "focused": "MuiFormLabel-focused-18 MuiInputLabel-focused-7",
                                            "required": "MuiFormLabel-required-22 MuiInputLabel-required-10",
                                            "root": "MuiFormLabel-root-17",
                                          }
                                        }
                                        component="label"
                                        data-shrink={false}
                                        muiFormControl={
                                          Object {
                                            "adornedStart": false,
                                            "disabled": false,
                                            "error": false,
                                            "filled": false,
                                            "focused": false,
                                            "margin": "normal",
                                            "onBlur": [Function],
                                            "onEmpty": [Function],
                                            "onFilled": [Function],
                                            "onFocus": [Function],
                                            "required": false,
                                            "variant": "standard",
                                          }
                                        }
                                      >
                                        <label
                                          className="MuiFormLabel-root-17 MuiInputLabel-root-6 MuiInputLabel-formControl-11 MuiInputLabel-animated-14"
                                          data-shrink={false}
                                        >
                                          パスワード
                                        </label>
                                      </FormLabel>
                                    </WithFormControlContext(FormLabel)>
                                  </WithStyles(WithFormControlContext(FormLabel))>
                                </InputLabel>
                              </WithFormControlContext(InputLabel)>
                            </WithStyles(WithFormControlContext(InputLabel))>
                            <WithStyles(Input)
                              fullWidth={true}
                              name="pass"
                              onChange={[Function]}
                              type="password"
                              value=""
                            >
                              <Input
                                classes={
                                  Object {
                                    "disabled": "MuiInput-disabled-27",
                                    "error": "MuiInput-error-29",
                                    "focused": "MuiInput-focused-26",
                                    "formControl": "MuiInput-formControl-25",
                                    "fullWidth": "MuiInput-fullWidth-31",
                                    "input": "MuiInput-input-32",
                                    "inputMarginDense": "MuiInput-inputMarginDense-33",
                                    "inputMultiline": "MuiInput-inputMultiline-34",
                                    "inputType": "MuiInput-inputType-35",
                                    "inputTypeSearch": "MuiInput-inputTypeSearch-36",
                                    "multiline": "MuiInput-multiline-30",
                                    "root": "MuiInput-root-24",
                                    "underline": "MuiInput-underline-28",
                                  }
                                }
                                fullWidth={true}
                                name="pass"
                                onChange={[Function]}
                                type="password"
                                value=""
                              >
                                <WithStyles(WithFormControlContext(InputBase))
                                  classes={
                                    Object {
                                      "disabled": "MuiInput-disabled-27",
                                      "error": "MuiInput-error-29",
                                      "focused": "MuiInput-focused-26",
                                      "formControl": "MuiInput-formControl-25",
                                      "fullWidth": "MuiInput-fullWidth-31",
                                      "input": "MuiInput-input-32",
                                      "inputMarginDense": "MuiInput-inputMarginDense-33",
                                      "inputMultiline": "MuiInput-inputMultiline-34",
                                      "inputType": "MuiInput-inputType-35",
                                      "inputTypeSearch": "MuiInput-inputTypeSearch-36",
                                      "multiline": "MuiInput-multiline-30",
                                      "root": "MuiInput-root-24 MuiInput-underline-28",
                                      "underline": null,
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  multiline={false}
                                  name="pass"
                                  onChange={[Function]}
                                  type="password"
                                  value=""
                                >
                                  <WithFormControlContext(InputBase)
                                    classes={
                                      Object {
                                        "adornedEnd": "MuiInputBase-adornedEnd-42",
                                        "adornedStart": "MuiInputBase-adornedStart-41",
                                        "disabled": "MuiInputBase-disabled-40 MuiInput-disabled-27",
                                        "error": "MuiInputBase-error-43 MuiInput-error-29",
                                        "focused": "MuiInputBase-focused-39 MuiInput-focused-26",
                                        "formControl": "MuiInputBase-formControl-38 MuiInput-formControl-25",
                                        "fullWidth": "MuiInputBase-fullWidth-46 MuiInput-fullWidth-31",
                                        "input": "MuiInputBase-input-47 MuiInput-input-32",
                                        "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-53",
                                        "inputAdornedStart": "MuiInputBase-inputAdornedStart-52",
                                        "inputMarginDense": "MuiInputBase-inputMarginDense-48 MuiInput-inputMarginDense-33",
                                        "inputMultiline": "MuiInputBase-inputMultiline-49 MuiInput-inputMultiline-34",
                                        "inputType": "MuiInputBase-inputType-50 MuiInput-inputType-35",
                                        "inputTypeSearch": "MuiInputBase-inputTypeSearch-51 MuiInput-inputTypeSearch-36",
                                        "marginDense": "MuiInputBase-marginDense-44",
                                        "multiline": "MuiInputBase-multiline-45 MuiInput-multiline-30",
                                        "root": "MuiInputBase-root-37 MuiInput-root-24 MuiInput-underline-28",
                                      }
                                    }
                                    fullWidth={true}
                                    inputComponent="input"
                                    multiline={false}
                                    name="pass"
                                    onChange={[Function]}
                                    type="password"
                                    value=""
                                  >
                                    <InputBase
                                      classes={
                                        Object {
                                          "adornedEnd": "MuiInputBase-adornedEnd-42",
                                          "adornedStart": "MuiInputBase-adornedStart-41",
                                          "disabled": "MuiInputBase-disabled-40 MuiInput-disabled-27",
                                          "error": "MuiInputBase-error-43 MuiInput-error-29",
                                          "focused": "MuiInputBase-focused-39 MuiInput-focused-26",
                                          "formControl": "MuiInputBase-formControl-38 MuiInput-formControl-25",
                                          "fullWidth": "MuiInputBase-fullWidth-46 MuiInput-fullWidth-31",
                                          "input": "MuiInputBase-input-47 MuiInput-input-32",
                                          "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-53",
                                          "inputAdornedStart": "MuiInputBase-inputAdornedStart-52",
                                          "inputMarginDense": "MuiInputBase-inputMarginDense-48 MuiInput-inputMarginDense-33",
                                          "inputMultiline": "MuiInputBase-inputMultiline-49 MuiInput-inputMultiline-34",
                                          "inputType": "MuiInputBase-inputType-50 MuiInput-inputType-35",
                                          "inputTypeSearch": "MuiInputBase-inputTypeSearch-51 MuiInput-inputTypeSearch-36",
                                          "marginDense": "MuiInputBase-marginDense-44",
                                          "multiline": "MuiInputBase-multiline-45 MuiInput-multiline-30",
                                          "root": "MuiInputBase-root-37 MuiInput-root-24 MuiInput-underline-28",
                                        }
                                      }
                                      fullWidth={true}
                                      inputComponent="input"
                                      muiFormControl={
                                        Object {
                                          "adornedStart": false,
                                          "disabled": false,
                                          "error": false,
                                          "filled": false,
                                          "focused": false,
                                          "margin": "normal",
                                          "onBlur": [Function],
                                          "onEmpty": [Function],
                                          "onFilled": [Function],
                                          "onFocus": [Function],
                                          "required": false,
                                          "variant": "standard",
                                        }
                                      }
                                      multiline={false}
                                      name="pass"
                                      onChange={[Function]}
                                      type="password"
                                      value=""
                                    >
                                      <div
                                        className="MuiInputBase-root-37 MuiInput-root-24 MuiInput-underline-28 MuiInputBase-fullWidth-46 MuiInput-fullWidth-31 MuiInputBase-formControl-38 MuiInput-formControl-25"
                                        onClick={[Function]}
                                      >
                                        <input
                                          aria-invalid={false}
                                          className="MuiInputBase-input-47 MuiInput-input-32 MuiInputBase-inputType-50 MuiInput-inputType-35"
                                          disabled={false}
                                          name="pass"
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          required={false}
                                          type="password"
                                          value=""
                                        />
                                      </div>
                                    </InputBase>
                                  </WithFormControlContext(InputBase)>
                                </WithStyles(WithFormControlContext(InputBase))>
                              </Input>
                            </WithStyles(Input)>
                          </div>
                        </FormControl>
                      </WithStyles(FormControl)>
                    </TextField>
                    <br />
                    <WithStyles(Button)
                      color="primary"
                      disabled={true}
                      fullWidth={true}
                      onClick={[Function]}
                      variant="contained"
                    >
                      <Button
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit-75",
                            "contained": "MuiButton-contained-65",
                            "containedPrimary": "MuiButton-containedPrimary-66",
                            "containedSecondary": "MuiButton-containedSecondary-67",
                            "disabled": "MuiButton-disabled-74",
                            "extendedFab": "MuiButton-extendedFab-72",
                            "fab": "MuiButton-fab-71",
                            "flat": "MuiButton-flat-59",
                            "flatPrimary": "MuiButton-flatPrimary-60",
                            "flatSecondary": "MuiButton-flatSecondary-61",
                            "focusVisible": "MuiButton-focusVisible-73",
                            "fullWidth": "MuiButton-fullWidth-79",
                            "label": "MuiButton-label-55",
                            "mini": "MuiButton-mini-76",
                            "outlined": "MuiButton-outlined-62",
                            "outlinedPrimary": "MuiButton-outlinedPrimary-63",
                            "outlinedSecondary": "MuiButton-outlinedSecondary-64",
                            "raised": "MuiButton-raised-68",
                            "raisedPrimary": "MuiButton-raisedPrimary-69",
                            "raisedSecondary": "MuiButton-raisedSecondary-70",
                            "root": "MuiButton-root-54",
                            "sizeLarge": "MuiButton-sizeLarge-78",
                            "sizeSmall": "MuiButton-sizeSmall-77",
                            "text": "MuiButton-text-56",
                            "textPrimary": "MuiButton-textPrimary-57",
                            "textSecondary": "MuiButton-textSecondary-58",
                          }
                        }
                        color="primary"
                        component="button"
                        disableFocusRipple={false}
                        disabled={true}
                        fullWidth={true}
                        mini={false}
                        onClick={[Function]}
                        size="medium"
                        type="button"
                        variant="contained"
                      >
                        <WithStyles(ButtonBase)
                          className="MuiButton-root-54 MuiButton-contained-65 MuiButton-containedPrimary-66 MuiButton-raised-68 MuiButton-raisedPrimary-69 MuiButton-disabled-74 MuiButton-fullWidth-79"
                          component="button"
                          disabled={true}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-73"
                          onClick={[Function]}
                          type="button"
                        >
                          <ButtonBase
                            centerRipple={false}
                            className="MuiButton-root-54 MuiButton-contained-65 MuiButton-containedPrimary-66 MuiButton-raised-68 MuiButton-raisedPrimary-69 MuiButton-disabled-74 MuiButton-fullWidth-79"
                            classes={
                              Object {
                                "disabled": "MuiButtonBase-disabled-81",
                                "focusVisible": "MuiButtonBase-focusVisible-82",
                                "root": "MuiButtonBase-root-80",
                              }
                            }
                            component="button"
                            disableRipple={false}
                            disableTouchRipple={false}
                            disabled={true}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-73"
                            onClick={[Function]}
                            tabIndex="0"
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root-80 MuiButtonBase-disabled-81 MuiButton-root-54 MuiButton-contained-65 MuiButton-containedPrimary-66 MuiButton-raised-68 MuiButton-raisedPrimary-69 MuiButton-disabled-74 MuiButton-fullWidth-79"
                              disabled={true}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex="-1"
                              type="button"
                            >
                              <span
                                className="MuiButton-label-55"
                              >
                                ログイン
                              </span>
                            </button>
                          </ButtonBase>
                        </WithStyles(ButtonBase)>
                      </Button>
                    </WithStyles(Button)>
                  </form>
                </SigninForm>
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": true,
                          "lastClassName": "c3",
                          "rules": Array [
                            "
  margin: 8px 0;
  text-align: center;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c3"
                    >
                      <GoogleButton
                        onClick={[Function]}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "sc-bdVaJa",
                                "isStatic": true,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "
  cursor: pointer;
  &:active {
    opacity: 0.4;
  }
",
                                ],
                              },
                              "displayName": "GoogleButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "sc-bdVaJa",
                              "target": [Function],
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                              Symbol(Symbol.hasInstance): [Function],
                            }
                          }
                          forwardedRef={null}
                          onClick={[Function]}
                        >
                          <GoogleButton
                            className="c4"
                            onClick={[Function]}
                          >
                            <svg
                              className="c4"
                              height="3em"
                              onClick={[Function]}
                              viewBox="0 0 193 48"
                              width="12em"
                            >
                              <defs>
                                <rect
                                  height={40}
                                  id="btn_google_signin_dark_normal_web_svg__b"
                                  rx={2}
                                  width={185}
                                  x={0}
                                  y={0}
                                />
                                <filter
                                  filterUnits="objectBoundingBox"
                                  height="112.5%"
                                  id="btn_google_signin_dark_normal_web_svg__a"
                                  width="102.2%"
                                  x="-1.1%"
                                  y="-5%"
                                >
                                  <feOffset
                                    dy={1}
                                    in="SourceAlpha"
                                    result="shadowOffsetOuter1"
                                  />
                                  <feGaussianBlur
                                    in="shadowOffsetOuter1"
                                    result="shadowBlurOuter1"
                                    stdDeviation={0.5}
                                  />
                                  <feColorMatrix
                                    in="shadowBlurOuter1"
                                    result="shadowMatrixOuter1"
                                    values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.24 0"
                                  />
                                  <feOffset
                                    in="SourceAlpha"
                                    result="shadowOffsetOuter2"
                                  />
                                  <feGaussianBlur
                                    in="shadowOffsetOuter2"
                                    result="shadowBlurOuter2"
                                    stdDeviation={0.5}
                                  />
                                  <feColorMatrix
                                    in="shadowBlurOuter2"
                                    result="shadowMatrixOuter2"
                                    values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"
                                  />
                                  <feMerge>
                                    <feMergeNode
                                      in="shadowMatrixOuter1"
                                    />
                                    <feMergeNode
                                      in="shadowMatrixOuter2"
                                    />
                                  </feMerge>
                                </filter>
                              </defs>
                              <g
                                fill="none"
                                fillRule="evenodd"
                              >
                                <g
                                  transform="translate(4 4)"
                                >
                                  <use
                                    fill="#000"
                                    filter="url(#btn_google_signin_dark_normal_web_svg__a)"
                                    xlinkHref="#btn_google_signin_dark_normal_web_svg__b"
                                  />
                                  <use
                                    fill="#4285F4"
                                    xlinkHref="#btn_google_signin_dark_normal_web_svg__b"
                                  />
                                </g>
                                <text
                                  fill="#FFF"
                                  fontFamily="Helvetica"
                                  fontSize={14}
                                  letterSpacing={0.219}
                                >
                                  <tspan
                                    x={54}
                                    y={30}
                                  >
                                    Sign in with Google
                                  </tspan>
                                </text>
                                <rect
                                  fill="#FFF"
                                  height={38}
                                  rx={1}
                                  width={38}
                                  x={5}
                                  y={5}
                                />
                                <path
                                  d="M32.64 24.205c0-.639-.057-1.252-.164-1.841H24v3.481h4.844a4.14 4.14 0 0 1-1.796 2.716v2.259h2.908c1.702-1.567 2.684-3.875 2.684-6.615z"
                                  fill="#4285F4"
                                />
                                <path
                                  d="M24 33c2.43 0 4.467-.806 5.956-2.18l-2.908-2.259c-.806.54-1.837.86-3.048.86-2.344 0-4.328-1.584-5.036-3.711h-3.007v2.332A8.997 8.997 0 0 0 24 33z"
                                  fill="#34A853"
                                />
                                <path
                                  d="M18.964 25.71a5.41 5.41 0 0 1-.282-1.71c0-.593.102-1.17.282-1.71v-2.332h-3.007A8.996 8.996 0 0 0 15 24c0 1.452.348 2.827.957 4.042l3.007-2.332z"
                                  fill="#FBBC05"
                                />
                                <path
                                  d="M24 18.58c1.321 0 2.508.454 3.44 1.345l2.582-2.58C28.463 15.891 26.426 15 24 15a8.997 8.997 0 0 0-8.043 4.958l3.007 2.332c.708-2.127 2.692-3.71 5.036-3.71z"
                                  fill="#EA4335"
                                />
                                <path
                                  d="M15 15h18v18H15z"
                                />
                              </g>
                            </svg>
                          </GoogleButton>
                        </StyledComponent>
                      </GoogleButton>
                    </div>
                  </StyledComponent>
                </styled.div>
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": true,
                          "lastClassName": "c3",
                          "rules": Array [
                            "
  margin: 8px 0;
  text-align: center;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c3"
                    >
                      <WithStyles(Button)
                        color="primary"
                        component={[Function]}
                        to="/users/signup"
                      >
                        <Button
                          classes={
                            Object {
                              "colorInherit": "MuiButton-colorInherit-75",
                              "contained": "MuiButton-contained-65",
                              "containedPrimary": "MuiButton-containedPrimary-66",
                              "containedSecondary": "MuiButton-containedSecondary-67",
                              "disabled": "MuiButton-disabled-74",
                              "extendedFab": "MuiButton-extendedFab-72",
                              "fab": "MuiButton-fab-71",
                              "flat": "MuiButton-flat-59",
                              "flatPrimary": "MuiButton-flatPrimary-60",
                              "flatSecondary": "MuiButton-flatSecondary-61",
                              "focusVisible": "MuiButton-focusVisible-73",
                              "fullWidth": "MuiButton-fullWidth-79",
                              "label": "MuiButton-label-55",
                              "mini": "MuiButton-mini-76",
                              "outlined": "MuiButton-outlined-62",
                              "outlinedPrimary": "MuiButton-outlinedPrimary-63",
                              "outlinedSecondary": "MuiButton-outlinedSecondary-64",
                              "raised": "MuiButton-raised-68",
                              "raisedPrimary": "MuiButton-raisedPrimary-69",
                              "raisedSecondary": "MuiButton-raisedSecondary-70",
                              "root": "MuiButton-root-54",
                              "sizeLarge": "MuiButton-sizeLarge-78",
                              "sizeSmall": "MuiButton-sizeSmall-77",
                              "text": "MuiButton-text-56",
                              "textPrimary": "MuiButton-textPrimary-57",
                              "textSecondary": "MuiButton-textSecondary-58",
                            }
                          }
                          color="primary"
                          component={[Function]}
                          disableFocusRipple={false}
                          disabled={false}
                          fullWidth={false}
                          mini={false}
                          size="medium"
                          to="/users/signup"
                          type="button"
                          variant="text"
                        >
                          <WithStyles(ButtonBase)
                            className="MuiButton-root-54 MuiButton-text-56 MuiButton-textPrimary-57 MuiButton-flat-59 MuiButton-flatPrimary-60"
                            component={[Function]}
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-73"
                            to="/users/signup"
                            type="button"
                          >
                            <ButtonBase
                              centerRipple={false}
                              className="MuiButton-root-54 MuiButton-text-56 MuiButton-textPrimary-57 MuiButton-flat-59 MuiButton-flatPrimary-60"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-81",
                                  "focusVisible": "MuiButtonBase-focusVisible-82",
                                  "root": "MuiButtonBase-root-80",
                                }
                              }
                              component={[Function]}
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="MuiButton-focusVisible-73"
                              tabIndex="0"
                              to="/users/signup"
                              type="button"
                            >
                              <Link
                                className="MuiButtonBase-root-80 MuiButton-root-54 MuiButton-text-56 MuiButton-textPrimary-57 MuiButton-flat-59 MuiButton-flatPrimary-60"
                                onBlur={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                replace={false}
                                role="button"
                                tabIndex="0"
                                to="/users/signup"
                              >
                                <a
                                  className="MuiButtonBase-root-80 MuiButton-root-54 MuiButton-text-56 MuiButton-textPrimary-57 MuiButton-flat-59 MuiButton-flatPrimary-60"
                                  onBlur={[Function]}
                                  onClick={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  role="button"
                                  tabIndex="0"
                                >
                                  <span
                                    className="MuiButton-label-55"
                                  >
                                    新規登録
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={false}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-87",
                                            "childLeaving": "MuiTouchRipple-childLeaving-88",
                                            "childPulsate": "MuiTouchRipple-childPulsate-89",
                                            "ripple": "MuiTouchRipple-ripple-84",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-86",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-85",
                                            "root": "MuiTouchRipple-root-83",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-83"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-83"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </a>
                              </Link>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </Button>
                      </WithStyles(Button)>
                    </div>
                  </StyledComponent>
                </styled.div>
                <styled.div>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bZQynM",
                          "isStatic": true,
                          "lastClassName": "c3",
                          "rules": Array [
                            "
  margin: 8px 0;
  text-align: center;
",
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bZQynM",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <div
                      className="c3"
                    >
                      <WithStyles(Button)
                        className="Signin-nonCaps-1"
                        color="primary"
                        onClick={[Function]}
                      >
                        <Button
                          className="Signin-nonCaps-1"
                          classes={
                            Object {
                              "colorInherit": "MuiButton-colorInherit-75",
                              "contained": "MuiButton-contained-65",
                              "containedPrimary": "MuiButton-containedPrimary-66",
                              "containedSecondary": "MuiButton-containedSecondary-67",
                              "disabled": "MuiButton-disabled-74",
                              "extendedFab": "MuiButton-extendedFab-72",
                              "fab": "MuiButton-fab-71",
                              "flat": "MuiButton-flat-59",
                              "flatPrimary": "MuiButton-flatPrimary-60",
                              "flatSecondary": "MuiButton-flatSecondary-61",
                              "focusVisible": "MuiButton-focusVisible-73",
                              "fullWidth": "MuiButton-fullWidth-79",
                              "label": "MuiButton-label-55",
                              "mini": "MuiButton-mini-76",
                              "outlined": "MuiButton-outlined-62",
                              "outlinedPrimary": "MuiButton-outlinedPrimary-63",
                              "outlinedSecondary": "MuiButton-outlinedSecondary-64",
                              "raised": "MuiButton-raised-68",
                              "raisedPrimary": "MuiButton-raisedPrimary-69",
                              "raisedSecondary": "MuiButton-raisedSecondary-70",
                              "root": "MuiButton-root-54",
                              "sizeLarge": "MuiButton-sizeLarge-78",
                              "sizeSmall": "MuiButton-sizeSmall-77",
                              "text": "MuiButton-text-56",
                              "textPrimary": "MuiButton-textPrimary-57",
                              "textSecondary": "MuiButton-textSecondary-58",
                            }
                          }
                          color="primary"
                          component="button"
                          disableFocusRipple={false}
                          disabled={false}
                          fullWidth={false}
                          mini={false}
                          onClick={[Function]}
                          size="medium"
                          type="button"
                          variant="text"
                        >
                          <WithStyles(ButtonBase)
                            className="MuiButton-root-54 MuiButton-text-56 MuiButton-textPrimary-57 MuiButton-flat-59 MuiButton-flatPrimary-60 Signin-nonCaps-1"
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="MuiButton-focusVisible-73"
                            onClick={[Function]}
                            type="button"
                          >
                            <ButtonBase
                              centerRipple={false}
                              className="MuiButton-root-54 MuiButton-text-56 MuiButton-textPrimary-57 MuiButton-flat-59 MuiButton-flatPrimary-60 Signin-nonCaps-1"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-81",
                                  "focusVisible": "MuiButtonBase-focusVisible-82",
                                  "root": "MuiButtonBase-root-80",
                                }
                              }
                              component="button"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={true}
                              focusVisibleClassName="MuiButton-focusVisible-73"
                              onClick={[Function]}
                              tabIndex="0"
                              type="button"
                            >
                              <button
                                className="MuiButtonBase-root-80 MuiButton-root-54 MuiButton-text-56 MuiButton-textPrimary-57 MuiButton-flat-59 MuiButton-flatPrimary-60 Signin-nonCaps-1"
                                disabled={false}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <span
                                  className="MuiButton-label-55"
                                >
                                  生体認証でログイン(β版)
                                </span>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={false}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={false}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-87",
                                          "childLeaving": "MuiTouchRipple-childLeaving-88",
                                          "childPulsate": "MuiTouchRipple-childPulsate-89",
                                          "ripple": "MuiTouchRipple-ripple-84",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-86",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-85",
                                          "root": "MuiTouchRipple-root-83",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-83"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-83"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </button>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </Button>
                      </WithStyles(Button)>
                    </div>
                  </StyledComponent>
                </styled.div>
                <OverlaySpinner
                  visible={false}
                />
              </div>
            </StyledComponent>
          </styled.div>
        </Container>
      </Signin>
    </WithStyles(Signin)>
  </MockRouter>
</Provider>
`;
