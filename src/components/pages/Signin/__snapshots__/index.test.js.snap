// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: Signin/nomal 1`] = `
.c4 {
  cursor: pointer;
}

.c4:active {
  opacity: 0.4;
}

.c0 {
  padding: 10px;
}

.c3 {
  margin: 8px 0;
  text-align: center;
}

.c1 {
  text-align: center;
  margin: 60px 0 30px;
}

.c2 {
  max-width: 60%;
}

<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <Signin
    firebase={
      Object {
        "doSignInWithEmailAndPassword": [MockFunction],
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
  >
    <Container
      authUser={null}
      back={false}
      firebase={
        Object {
          "doSignInWithEmailAndPassword": [MockFunction],
        }
      }
      header={false}
      history={
        Object {
          "push": [MockFunction],
        }
      }
      noPadding={false}
      title=""
    >
      <styled.div
        noPadding={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-ifAKCX",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "
  padding: ",
                  [Function],
                  ";
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-ifAKCX",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          noPadding={false}
        >
          <div
            className="c0"
          >
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bZQynM",
                      "isStatic": true,
                      "lastClassName": "c1",
                      "rules": Array [
                        "
  text-align: center;
  margin: 60px 0 30px;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bZQynM",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c1"
                >
                  <styled.img
                    alt="IPPO"
                    src="/images/ippo.png"
                  >
                    <StyledComponent
                      alt="IPPO"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-gzVnrw",
                            "isStatic": true,
                            "lastClassName": "c2",
                            "rules": Array [
                              "
  max-width: 60%;
",
                            ],
                          },
                          "displayName": "styled.img",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-gzVnrw",
                          "target": "img",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      src="/images/ippo.png"
                    >
                      <img
                        alt="IPPO"
                        className="c2"
                        src="/images/ippo.png"
                      />
                    </StyledComponent>
                  </styled.img>
                </div>
              </StyledComponent>
            </styled.div>
            <SigninForm
              onSubmit={[Function]}
            >
              <form>
                <TextField
                  color="primary"
                  fullWidth={true}
                  label="メールアドレス"
                  margin="normal"
                  name="email"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  value=""
                  variant="standard"
                >
                  <WithStyles(FormControl)
                    color="primary"
                    fullWidth={true}
                    margin="normal"
                    required={false}
                    variant="standard"
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-4",
                          "marginDense": "MuiFormControl-marginDense-3",
                          "marginNormal": "MuiFormControl-marginNormal-2",
                          "root": "MuiFormControl-root-1",
                        }
                      }
                      color="primary"
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root-1 MuiFormControl-marginNormal-2 MuiFormControl-fullWidth-4"
                        color="primary"
                      >
                        <WithStyles(WithFormControlContext(InputLabel))>
                          <WithFormControlContext(InputLabel)
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated-13",
                                "disabled": "MuiInputLabel-disabled-7",
                                "error": "MuiInputLabel-error-8",
                                "filled": "MuiInputLabel-filled-14",
                                "focused": "MuiInputLabel-focused-6",
                                "formControl": "MuiInputLabel-formControl-10",
                                "marginDense": "MuiInputLabel-marginDense-11",
                                "outlined": "MuiInputLabel-outlined-15",
                                "required": "MuiInputLabel-required-9",
                                "root": "MuiInputLabel-root-5",
                                "shrink": "MuiInputLabel-shrink-12",
                              }
                            }
                          >
                            <InputLabel
                              classes={
                                Object {
                                  "animated": "MuiInputLabel-animated-13",
                                  "disabled": "MuiInputLabel-disabled-7",
                                  "error": "MuiInputLabel-error-8",
                                  "filled": "MuiInputLabel-filled-14",
                                  "focused": "MuiInputLabel-focused-6",
                                  "formControl": "MuiInputLabel-formControl-10",
                                  "marginDense": "MuiInputLabel-marginDense-11",
                                  "outlined": "MuiInputLabel-outlined-15",
                                  "required": "MuiInputLabel-required-9",
                                  "root": "MuiInputLabel-root-5",
                                  "shrink": "MuiInputLabel-shrink-12",
                                }
                              }
                              disableAnimation={false}
                              muiFormControl={
                                Object {
                                  "adornedStart": false,
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "margin": "normal",
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "required": false,
                                  "variant": "standard",
                                }
                              }
                            >
                              <WithStyles(WithFormControlContext(FormLabel))
                                className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                classes={
                                  Object {
                                    "disabled": "MuiInputLabel-disabled-7",
                                    "error": "MuiInputLabel-error-8",
                                    "focused": "MuiInputLabel-focused-6",
                                    "required": "MuiInputLabel-required-9",
                                  }
                                }
                                data-shrink={false}
                              >
                                <WithFormControlContext(FormLabel)
                                  className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                  classes={
                                    Object {
                                      "asterisk": "MuiFormLabel-asterisk-22",
                                      "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                      "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                      "filled": "MuiFormLabel-filled-20",
                                      "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                      "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                      "root": "MuiFormLabel-root-16",
                                    }
                                  }
                                  data-shrink={false}
                                >
                                  <FormLabel
                                    className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                    classes={
                                      Object {
                                        "asterisk": "MuiFormLabel-asterisk-22",
                                        "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                        "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                        "filled": "MuiFormLabel-filled-20",
                                        "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                        "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                        "root": "MuiFormLabel-root-16",
                                      }
                                    }
                                    component="label"
                                    data-shrink={false}
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": false,
                                        "variant": "standard",
                                      }
                                    }
                                  >
                                    <label
                                      className="MuiFormLabel-root-16 MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                      data-shrink={false}
                                    >
                                      メールアドレス
                                    </label>
                                  </FormLabel>
                                </WithFormControlContext(FormLabel)>
                              </WithStyles(WithFormControlContext(FormLabel))>
                            </InputLabel>
                          </WithFormControlContext(InputLabel)>
                        </WithStyles(WithFormControlContext(InputLabel))>
                        <WithStyles(Input)
                          fullWidth={true}
                          name="email"
                          onChange={[Function]}
                          value=""
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-26",
                                "error": "MuiInput-error-28",
                                "focused": "MuiInput-focused-25",
                                "formControl": "MuiInput-formControl-24",
                                "fullWidth": "MuiInput-fullWidth-30",
                                "input": "MuiInput-input-31",
                                "inputMarginDense": "MuiInput-inputMarginDense-32",
                                "inputMultiline": "MuiInput-inputMultiline-33",
                                "inputType": "MuiInput-inputType-34",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                "multiline": "MuiInput-multiline-29",
                                "root": "MuiInput-root-23",
                                "underline": "MuiInput-underline-27",
                              }
                            }
                            fullWidth={true}
                            name="email"
                            onChange={[Function]}
                            value=""
                          >
                            <WithStyles(WithFormControlContext(InputBase))
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-26",
                                  "error": "MuiInput-error-28",
                                  "focused": "MuiInput-focused-25",
                                  "formControl": "MuiInput-formControl-24",
                                  "fullWidth": "MuiInput-fullWidth-30",
                                  "input": "MuiInput-input-31",
                                  "inputMarginDense": "MuiInput-inputMarginDense-32",
                                  "inputMultiline": "MuiInput-inputMultiline-33",
                                  "inputType": "MuiInput-inputType-34",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                  "multiline": "MuiInput-multiline-29",
                                  "root": "MuiInput-root-23 MuiInput-underline-27",
                                  "underline": null,
                                }
                              }
                              fullWidth={true}
                              inputComponent="input"
                              multiline={false}
                              name="email"
                              onChange={[Function]}
                              type="text"
                              value=""
                            >
                              <WithFormControlContext(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd-41",
                                    "adornedStart": "MuiInputBase-adornedStart-40",
                                    "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                    "error": "MuiInputBase-error-42 MuiInput-error-28",
                                    "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                    "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                    "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                    "input": "MuiInputBase-input-46 MuiInput-input-31",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                    "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                    "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                    "marginDense": "MuiInputBase-marginDense-43",
                                    "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                    "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                  }
                                }
                                fullWidth={true}
                                inputComponent="input"
                                multiline={false}
                                name="email"
                                onChange={[Function]}
                                type="text"
                                value=""
                              >
                                <InputBase
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-41",
                                      "adornedStart": "MuiInputBase-adornedStart-40",
                                      "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                      "error": "MuiInputBase-error-42 MuiInput-error-28",
                                      "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                      "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                      "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                      "input": "MuiInputBase-input-46 MuiInput-input-31",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                      "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                      "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                      "marginDense": "MuiInputBase-marginDense-43",
                                      "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                      "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  name="email"
                                  onChange={[Function]}
                                  type="text"
                                  value=""
                                >
                                  <div
                                    className="MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27 MuiInputBase-fullWidth-45 MuiInput-fullWidth-30 MuiInputBase-formControl-37 MuiInput-formControl-24"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-invalid={false}
                                      className="MuiInputBase-input-46 MuiInput-input-31"
                                      disabled={false}
                                      name="email"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      type="text"
                                      value=""
                                    />
                                  </div>
                                </InputBase>
                              </WithFormControlContext(InputBase)>
                            </WithStyles(WithFormControlContext(InputBase))>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
                <br />
                <TextField
                  color="primary"
                  fullWidth={true}
                  label="パスワード"
                  margin="normal"
                  name="pass"
                  onChange={[Function]}
                  required={false}
                  select={false}
                  type="password"
                  value=""
                  variant="standard"
                >
                  <WithStyles(FormControl)
                    color="primary"
                    fullWidth={true}
                    margin="normal"
                    required={false}
                    variant="standard"
                  >
                    <FormControl
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth-4",
                          "marginDense": "MuiFormControl-marginDense-3",
                          "marginNormal": "MuiFormControl-marginNormal-2",
                          "root": "MuiFormControl-root-1",
                        }
                      }
                      color="primary"
                      component="div"
                      disabled={false}
                      error={false}
                      fullWidth={true}
                      margin="normal"
                      required={false}
                      variant="standard"
                    >
                      <div
                        className="MuiFormControl-root-1 MuiFormControl-marginNormal-2 MuiFormControl-fullWidth-4"
                        color="primary"
                      >
                        <WithStyles(WithFormControlContext(InputLabel))>
                          <WithFormControlContext(InputLabel)
                            classes={
                              Object {
                                "animated": "MuiInputLabel-animated-13",
                                "disabled": "MuiInputLabel-disabled-7",
                                "error": "MuiInputLabel-error-8",
                                "filled": "MuiInputLabel-filled-14",
                                "focused": "MuiInputLabel-focused-6",
                                "formControl": "MuiInputLabel-formControl-10",
                                "marginDense": "MuiInputLabel-marginDense-11",
                                "outlined": "MuiInputLabel-outlined-15",
                                "required": "MuiInputLabel-required-9",
                                "root": "MuiInputLabel-root-5",
                                "shrink": "MuiInputLabel-shrink-12",
                              }
                            }
                          >
                            <InputLabel
                              classes={
                                Object {
                                  "animated": "MuiInputLabel-animated-13",
                                  "disabled": "MuiInputLabel-disabled-7",
                                  "error": "MuiInputLabel-error-8",
                                  "filled": "MuiInputLabel-filled-14",
                                  "focused": "MuiInputLabel-focused-6",
                                  "formControl": "MuiInputLabel-formControl-10",
                                  "marginDense": "MuiInputLabel-marginDense-11",
                                  "outlined": "MuiInputLabel-outlined-15",
                                  "required": "MuiInputLabel-required-9",
                                  "root": "MuiInputLabel-root-5",
                                  "shrink": "MuiInputLabel-shrink-12",
                                }
                              }
                              disableAnimation={false}
                              muiFormControl={
                                Object {
                                  "adornedStart": false,
                                  "disabled": false,
                                  "error": false,
                                  "filled": false,
                                  "focused": false,
                                  "margin": "normal",
                                  "onBlur": [Function],
                                  "onEmpty": [Function],
                                  "onFilled": [Function],
                                  "onFocus": [Function],
                                  "required": false,
                                  "variant": "standard",
                                }
                              }
                            >
                              <WithStyles(WithFormControlContext(FormLabel))
                                className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                classes={
                                  Object {
                                    "disabled": "MuiInputLabel-disabled-7",
                                    "error": "MuiInputLabel-error-8",
                                    "focused": "MuiInputLabel-focused-6",
                                    "required": "MuiInputLabel-required-9",
                                  }
                                }
                                data-shrink={false}
                              >
                                <WithFormControlContext(FormLabel)
                                  className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                  classes={
                                    Object {
                                      "asterisk": "MuiFormLabel-asterisk-22",
                                      "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                      "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                      "filled": "MuiFormLabel-filled-20",
                                      "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                      "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                      "root": "MuiFormLabel-root-16",
                                    }
                                  }
                                  data-shrink={false}
                                >
                                  <FormLabel
                                    className="MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                    classes={
                                      Object {
                                        "asterisk": "MuiFormLabel-asterisk-22",
                                        "disabled": "MuiFormLabel-disabled-18 MuiInputLabel-disabled-7",
                                        "error": "MuiFormLabel-error-19 MuiInputLabel-error-8",
                                        "filled": "MuiFormLabel-filled-20",
                                        "focused": "MuiFormLabel-focused-17 MuiInputLabel-focused-6",
                                        "required": "MuiFormLabel-required-21 MuiInputLabel-required-9",
                                        "root": "MuiFormLabel-root-16",
                                      }
                                    }
                                    component="label"
                                    data-shrink={false}
                                    muiFormControl={
                                      Object {
                                        "adornedStart": false,
                                        "disabled": false,
                                        "error": false,
                                        "filled": false,
                                        "focused": false,
                                        "margin": "normal",
                                        "onBlur": [Function],
                                        "onEmpty": [Function],
                                        "onFilled": [Function],
                                        "onFocus": [Function],
                                        "required": false,
                                        "variant": "standard",
                                      }
                                    }
                                  >
                                    <label
                                      className="MuiFormLabel-root-16 MuiInputLabel-root-5 MuiInputLabel-formControl-10 MuiInputLabel-animated-13"
                                      data-shrink={false}
                                    >
                                      パスワード
                                    </label>
                                  </FormLabel>
                                </WithFormControlContext(FormLabel)>
                              </WithStyles(WithFormControlContext(FormLabel))>
                            </InputLabel>
                          </WithFormControlContext(InputLabel)>
                        </WithStyles(WithFormControlContext(InputLabel))>
                        <WithStyles(Input)
                          fullWidth={true}
                          name="pass"
                          onChange={[Function]}
                          type="password"
                          value=""
                        >
                          <Input
                            classes={
                              Object {
                                "disabled": "MuiInput-disabled-26",
                                "error": "MuiInput-error-28",
                                "focused": "MuiInput-focused-25",
                                "formControl": "MuiInput-formControl-24",
                                "fullWidth": "MuiInput-fullWidth-30",
                                "input": "MuiInput-input-31",
                                "inputMarginDense": "MuiInput-inputMarginDense-32",
                                "inputMultiline": "MuiInput-inputMultiline-33",
                                "inputType": "MuiInput-inputType-34",
                                "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                "multiline": "MuiInput-multiline-29",
                                "root": "MuiInput-root-23",
                                "underline": "MuiInput-underline-27",
                              }
                            }
                            fullWidth={true}
                            name="pass"
                            onChange={[Function]}
                            type="password"
                            value=""
                          >
                            <WithStyles(WithFormControlContext(InputBase))
                              classes={
                                Object {
                                  "disabled": "MuiInput-disabled-26",
                                  "error": "MuiInput-error-28",
                                  "focused": "MuiInput-focused-25",
                                  "formControl": "MuiInput-formControl-24",
                                  "fullWidth": "MuiInput-fullWidth-30",
                                  "input": "MuiInput-input-31",
                                  "inputMarginDense": "MuiInput-inputMarginDense-32",
                                  "inputMultiline": "MuiInput-inputMultiline-33",
                                  "inputType": "MuiInput-inputType-34",
                                  "inputTypeSearch": "MuiInput-inputTypeSearch-35",
                                  "multiline": "MuiInput-multiline-29",
                                  "root": "MuiInput-root-23 MuiInput-underline-27",
                                  "underline": null,
                                }
                              }
                              fullWidth={true}
                              inputComponent="input"
                              multiline={false}
                              name="pass"
                              onChange={[Function]}
                              type="password"
                              value=""
                            >
                              <WithFormControlContext(InputBase)
                                classes={
                                  Object {
                                    "adornedEnd": "MuiInputBase-adornedEnd-41",
                                    "adornedStart": "MuiInputBase-adornedStart-40",
                                    "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                    "error": "MuiInputBase-error-42 MuiInput-error-28",
                                    "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                    "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                    "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                    "input": "MuiInputBase-input-46 MuiInput-input-31",
                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                    "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                    "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                    "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                    "marginDense": "MuiInputBase-marginDense-43",
                                    "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                    "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                  }
                                }
                                fullWidth={true}
                                inputComponent="input"
                                multiline={false}
                                name="pass"
                                onChange={[Function]}
                                type="password"
                                value=""
                              >
                                <InputBase
                                  classes={
                                    Object {
                                      "adornedEnd": "MuiInputBase-adornedEnd-41",
                                      "adornedStart": "MuiInputBase-adornedStart-40",
                                      "disabled": "MuiInputBase-disabled-39 MuiInput-disabled-26",
                                      "error": "MuiInputBase-error-42 MuiInput-error-28",
                                      "focused": "MuiInputBase-focused-38 MuiInput-focused-25",
                                      "formControl": "MuiInputBase-formControl-37 MuiInput-formControl-24",
                                      "fullWidth": "MuiInputBase-fullWidth-45 MuiInput-fullWidth-30",
                                      "input": "MuiInputBase-input-46 MuiInput-input-31",
                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd-52",
                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart-51",
                                      "inputMarginDense": "MuiInputBase-inputMarginDense-47 MuiInput-inputMarginDense-32",
                                      "inputMultiline": "MuiInputBase-inputMultiline-48 MuiInput-inputMultiline-33",
                                      "inputType": "MuiInputBase-inputType-49 MuiInput-inputType-34",
                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch-50 MuiInput-inputTypeSearch-35",
                                      "marginDense": "MuiInputBase-marginDense-43",
                                      "multiline": "MuiInputBase-multiline-44 MuiInput-multiline-29",
                                      "root": "MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27",
                                    }
                                  }
                                  fullWidth={true}
                                  inputComponent="input"
                                  muiFormControl={
                                    Object {
                                      "adornedStart": false,
                                      "disabled": false,
                                      "error": false,
                                      "filled": false,
                                      "focused": false,
                                      "margin": "normal",
                                      "onBlur": [Function],
                                      "onEmpty": [Function],
                                      "onFilled": [Function],
                                      "onFocus": [Function],
                                      "required": false,
                                      "variant": "standard",
                                    }
                                  }
                                  multiline={false}
                                  name="pass"
                                  onChange={[Function]}
                                  type="password"
                                  value=""
                                >
                                  <div
                                    className="MuiInputBase-root-36 MuiInput-root-23 MuiInput-underline-27 MuiInputBase-fullWidth-45 MuiInput-fullWidth-30 MuiInputBase-formControl-37 MuiInput-formControl-24"
                                    onClick={[Function]}
                                  >
                                    <input
                                      aria-invalid={false}
                                      className="MuiInputBase-input-46 MuiInput-input-31 MuiInputBase-inputType-49 MuiInput-inputType-34"
                                      disabled={false}
                                      name="pass"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      required={false}
                                      type="password"
                                      value=""
                                    />
                                  </div>
                                </InputBase>
                              </WithFormControlContext(InputBase)>
                            </WithStyles(WithFormControlContext(InputBase))>
                          </Input>
                        </WithStyles(Input)>
                      </div>
                    </FormControl>
                  </WithStyles(FormControl)>
                </TextField>
                <br />
                <WithStyles(Button)
                  color="primary"
                  disabled={true}
                  fullWidth={true}
                  onClick={[Function]}
                  variant="contained"
                >
                  <Button
                    classes={
                      Object {
                        "colorInherit": "MuiButton-colorInherit-74",
                        "contained": "MuiButton-contained-64",
                        "containedPrimary": "MuiButton-containedPrimary-65",
                        "containedSecondary": "MuiButton-containedSecondary-66",
                        "disabled": "MuiButton-disabled-73",
                        "extendedFab": "MuiButton-extendedFab-71",
                        "fab": "MuiButton-fab-70",
                        "flat": "MuiButton-flat-58",
                        "flatPrimary": "MuiButton-flatPrimary-59",
                        "flatSecondary": "MuiButton-flatSecondary-60",
                        "focusVisible": "MuiButton-focusVisible-72",
                        "fullWidth": "MuiButton-fullWidth-78",
                        "label": "MuiButton-label-54",
                        "mini": "MuiButton-mini-75",
                        "outlined": "MuiButton-outlined-61",
                        "outlinedPrimary": "MuiButton-outlinedPrimary-62",
                        "outlinedSecondary": "MuiButton-outlinedSecondary-63",
                        "raised": "MuiButton-raised-67",
                        "raisedPrimary": "MuiButton-raisedPrimary-68",
                        "raisedSecondary": "MuiButton-raisedSecondary-69",
                        "root": "MuiButton-root-53",
                        "sizeLarge": "MuiButton-sizeLarge-77",
                        "sizeSmall": "MuiButton-sizeSmall-76",
                        "text": "MuiButton-text-55",
                        "textPrimary": "MuiButton-textPrimary-56",
                        "textSecondary": "MuiButton-textSecondary-57",
                      }
                    }
                    color="primary"
                    component="button"
                    disableFocusRipple={false}
                    disabled={true}
                    fullWidth={true}
                    mini={false}
                    onClick={[Function]}
                    size="medium"
                    type="button"
                    variant="contained"
                  >
                    <WithStyles(ButtonBase)
                      className="MuiButton-root-53 MuiButton-contained-64 MuiButton-containedPrimary-65 MuiButton-raised-67 MuiButton-raisedPrimary-68 MuiButton-disabled-73 MuiButton-fullWidth-78"
                      component="button"
                      disabled={true}
                      focusRipple={true}
                      focusVisibleClassName="MuiButton-focusVisible-72"
                      onClick={[Function]}
                      type="button"
                    >
                      <ButtonBase
                        centerRipple={false}
                        className="MuiButton-root-53 MuiButton-contained-64 MuiButton-containedPrimary-65 MuiButton-raised-67 MuiButton-raisedPrimary-68 MuiButton-disabled-73 MuiButton-fullWidth-78"
                        classes={
                          Object {
                            "disabled": "MuiButtonBase-disabled-80",
                            "focusVisible": "MuiButtonBase-focusVisible-81",
                            "root": "MuiButtonBase-root-79",
                          }
                        }
                        component="button"
                        disableRipple={false}
                        disableTouchRipple={false}
                        disabled={true}
                        focusRipple={true}
                        focusVisibleClassName="MuiButton-focusVisible-72"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <button
                          className="MuiButtonBase-root-79 MuiButtonBase-disabled-80 MuiButton-root-53 MuiButton-contained-64 MuiButton-containedPrimary-65 MuiButton-raised-67 MuiButton-raisedPrimary-68 MuiButton-disabled-73 MuiButton-fullWidth-78"
                          disabled={true}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onContextMenu={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyUp={[Function]}
                          onMouseDown={[Function]}
                          onMouseLeave={[Function]}
                          onMouseUp={[Function]}
                          onTouchEnd={[Function]}
                          onTouchMove={[Function]}
                          onTouchStart={[Function]}
                          tabIndex="-1"
                          type="button"
                        >
                          <span
                            className="MuiButton-label-54"
                          >
                            ログイン
                          </span>
                        </button>
                      </ButtonBase>
                    </WithStyles(ButtonBase)>
                  </Button>
                </WithStyles(Button)>
              </form>
            </SigninForm>
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-EHOje",
                      "isStatic": true,
                      "lastClassName": "c3",
                      "rules": Array [
                        "
  margin: 8px 0;
  text-align: center;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-EHOje",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c3"
                >
                  <GoogleButton
                    onClick={[Function]}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bdVaJa",
                            "isStatic": true,
                            "lastClassName": "c4",
                            "rules": Array [
                              "
  cursor: pointer;
  &:active {
    opacity: 0.4;
  }
",
                            ],
                          },
                          "displayName": "GoogleButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bdVaJa",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                          Symbol(Symbol.hasInstance): [Function],
                        }
                      }
                      forwardedRef={null}
                      onClick={[Function]}
                    >
                      <GoogleButton
                        className="c4"
                        onClick={[Function]}
                      >
                        <svg
                          className="c4"
                          height="3em"
                          onClick={[Function]}
                          viewBox="0 0 193 48"
                          width="12em"
                        >
                          <defs>
                            <rect
                              height={40}
                              id="btn_google_signin_dark_normal_web_svg__b"
                              rx={2}
                              width={185}
                              x={0}
                              y={0}
                            />
                            <filter
                              filterUnits="objectBoundingBox"
                              height="112.5%"
                              id="btn_google_signin_dark_normal_web_svg__a"
                              width="102.2%"
                              x="-1.1%"
                              y="-5%"
                            >
                              <feOffset
                                dy={1}
                                in="SourceAlpha"
                                result="shadowOffsetOuter1"
                              />
                              <feGaussianBlur
                                in="shadowOffsetOuter1"
                                result="shadowBlurOuter1"
                                stdDeviation={0.5}
                              />
                              <feColorMatrix
                                in="shadowBlurOuter1"
                                result="shadowMatrixOuter1"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.24 0"
                              />
                              <feOffset
                                in="SourceAlpha"
                                result="shadowOffsetOuter2"
                              />
                              <feGaussianBlur
                                in="shadowOffsetOuter2"
                                result="shadowBlurOuter2"
                                stdDeviation={0.5}
                              />
                              <feColorMatrix
                                in="shadowBlurOuter2"
                                result="shadowMatrixOuter2"
                                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.12 0"
                              />
                              <feMerge>
                                <feMergeNode
                                  in="shadowMatrixOuter1"
                                />
                                <feMergeNode
                                  in="shadowMatrixOuter2"
                                />
                              </feMerge>
                            </filter>
                          </defs>
                          <g
                            fill="none"
                            fillRule="evenodd"
                          >
                            <g
                              transform="translate(4 4)"
                            >
                              <use
                                fill="#000"
                                filter="url(#btn_google_signin_dark_normal_web_svg__a)"
                                xlinkHref="#btn_google_signin_dark_normal_web_svg__b"
                              />
                              <use
                                fill="#4285F4"
                                xlinkHref="#btn_google_signin_dark_normal_web_svg__b"
                              />
                            </g>
                            <text
                              fill="#FFF"
                              fontFamily="Helvetica"
                              fontSize={14}
                              letterSpacing={0.219}
                            >
                              <tspan
                                x={54}
                                y={30}
                              >
                                Sign in with Google
                              </tspan>
                            </text>
                            <rect
                              fill="#FFF"
                              height={38}
                              rx={1}
                              width={38}
                              x={5}
                              y={5}
                            />
                            <path
                              d="M32.64 24.205c0-.639-.057-1.252-.164-1.841H24v3.481h4.844a4.14 4.14 0 0 1-1.796 2.716v2.259h2.908c1.702-1.567 2.684-3.875 2.684-6.615z"
                              fill="#4285F4"
                            />
                            <path
                              d="M24 33c2.43 0 4.467-.806 5.956-2.18l-2.908-2.259c-.806.54-1.837.86-3.048.86-2.344 0-4.328-1.584-5.036-3.711h-3.007v2.332A8.997 8.997 0 0 0 24 33z"
                              fill="#34A853"
                            />
                            <path
                              d="M18.964 25.71a5.41 5.41 0 0 1-.282-1.71c0-.593.102-1.17.282-1.71v-2.332h-3.007A8.996 8.996 0 0 0 15 24c0 1.452.348 2.827.957 4.042l3.007-2.332z"
                              fill="#FBBC05"
                            />
                            <path
                              d="M24 18.58c1.321 0 2.508.454 3.44 1.345l2.582-2.58C28.463 15.891 26.426 15 24 15a8.997 8.997 0 0 0-8.043 4.958l3.007 2.332c.708-2.127 2.692-3.71 5.036-3.71z"
                              fill="#EA4335"
                            />
                            <path
                              d="M15 15h18v18H15z"
                            />
                          </g>
                        </svg>
                      </GoogleButton>
                    </StyledComponent>
                  </GoogleButton>
                </div>
              </StyledComponent>
            </styled.div>
            <styled.div>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-EHOje",
                      "isStatic": true,
                      "lastClassName": "c3",
                      "rules": Array [
                        "
  margin: 8px 0;
  text-align: center;
",
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-EHOje",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <div
                  className="c3"
                >
                  <WithStyles(Button)
                    color="primary"
                    component={[Function]}
                    fullWidth={true}
                    to="/users/signup"
                  >
                    <Button
                      classes={
                        Object {
                          "colorInherit": "MuiButton-colorInherit-74",
                          "contained": "MuiButton-contained-64",
                          "containedPrimary": "MuiButton-containedPrimary-65",
                          "containedSecondary": "MuiButton-containedSecondary-66",
                          "disabled": "MuiButton-disabled-73",
                          "extendedFab": "MuiButton-extendedFab-71",
                          "fab": "MuiButton-fab-70",
                          "flat": "MuiButton-flat-58",
                          "flatPrimary": "MuiButton-flatPrimary-59",
                          "flatSecondary": "MuiButton-flatSecondary-60",
                          "focusVisible": "MuiButton-focusVisible-72",
                          "fullWidth": "MuiButton-fullWidth-78",
                          "label": "MuiButton-label-54",
                          "mini": "MuiButton-mini-75",
                          "outlined": "MuiButton-outlined-61",
                          "outlinedPrimary": "MuiButton-outlinedPrimary-62",
                          "outlinedSecondary": "MuiButton-outlinedSecondary-63",
                          "raised": "MuiButton-raised-67",
                          "raisedPrimary": "MuiButton-raisedPrimary-68",
                          "raisedSecondary": "MuiButton-raisedSecondary-69",
                          "root": "MuiButton-root-53",
                          "sizeLarge": "MuiButton-sizeLarge-77",
                          "sizeSmall": "MuiButton-sizeSmall-76",
                          "text": "MuiButton-text-55",
                          "textPrimary": "MuiButton-textPrimary-56",
                          "textSecondary": "MuiButton-textSecondary-57",
                        }
                      }
                      color="primary"
                      component={[Function]}
                      disableFocusRipple={false}
                      disabled={false}
                      fullWidth={true}
                      mini={false}
                      size="medium"
                      to="/users/signup"
                      type="button"
                      variant="text"
                    >
                      <WithStyles(ButtonBase)
                        className="MuiButton-root-53 MuiButton-text-55 MuiButton-textPrimary-56 MuiButton-flat-58 MuiButton-flatPrimary-59 MuiButton-fullWidth-78"
                        component={[Function]}
                        disabled={false}
                        focusRipple={true}
                        focusVisibleClassName="MuiButton-focusVisible-72"
                        to="/users/signup"
                        type="button"
                      >
                        <ButtonBase
                          centerRipple={false}
                          className="MuiButton-root-53 MuiButton-text-55 MuiButton-textPrimary-56 MuiButton-flat-58 MuiButton-flatPrimary-59 MuiButton-fullWidth-78"
                          classes={
                            Object {
                              "disabled": "MuiButtonBase-disabled-80",
                              "focusVisible": "MuiButtonBase-focusVisible-81",
                              "root": "MuiButtonBase-root-79",
                            }
                          }
                          component={[Function]}
                          disableRipple={false}
                          disableTouchRipple={false}
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="MuiButton-focusVisible-72"
                          tabIndex="0"
                          to="/users/signup"
                          type="button"
                        >
                          <Link
                            className="MuiButtonBase-root-79 MuiButton-root-53 MuiButton-text-55 MuiButton-textPrimary-56 MuiButton-flat-58 MuiButton-flatPrimary-59 MuiButton-fullWidth-78"
                            onBlur={[Function]}
                            onContextMenu={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onKeyUp={[Function]}
                            onMouseDown={[Function]}
                            onMouseLeave={[Function]}
                            onMouseUp={[Function]}
                            onTouchEnd={[Function]}
                            onTouchMove={[Function]}
                            onTouchStart={[Function]}
                            replace={false}
                            role="button"
                            tabIndex="0"
                            to="/users/signup"
                          >
                            <a
                              className="MuiButtonBase-root-79 MuiButton-root-53 MuiButton-text-55 MuiButton-textPrimary-56 MuiButton-flat-58 MuiButton-flatPrimary-59 MuiButton-fullWidth-78"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onContextMenu={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              role="button"
                              tabIndex="0"
                            >
                              <span
                                className="MuiButton-label-54"
                              >
                                新規登録
                              </span>
                              <NoSsr
                                defer={false}
                                fallback={null}
                              >
                                <WithStyles(TouchRipple)
                                  center={false}
                                  innerRef={[Function]}
                                >
                                  <TouchRipple
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child-86",
                                        "childLeaving": "MuiTouchRipple-childLeaving-87",
                                        "childPulsate": "MuiTouchRipple-childPulsate-88",
                                        "ripple": "MuiTouchRipple-ripple-83",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate-85",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible-84",
                                        "root": "MuiTouchRipple-root-82",
                                      }
                                    }
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      className="MuiTouchRipple-root-82"
                                      component="span"
                                      enter={true}
                                      exit={true}
                                    >
                                      <span
                                        className="MuiTouchRipple-root-82"
                                      />
                                    </TransitionGroup>
                                  </TouchRipple>
                                </WithStyles(TouchRipple)>
                              </NoSsr>
                            </a>
                          </Link>
                        </ButtonBase>
                      </WithStyles(ButtonBase)>
                    </Button>
                  </WithStyles(Button)>
                </div>
              </StyledComponent>
            </styled.div>
            <OverlaySpinner
              visible={false}
            />
          </div>
        </StyledComponent>
      </styled.div>
    </Container>
  </Signin>
</MockRouter>
`;
