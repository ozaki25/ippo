// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: OverlaySpinner/nomal 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgb(0,0,0,0.4);
  position: fixed;
  z-index: 20;
}

<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <OverlaySpinner
    visible={true}
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgb(0, 0, 0, 0.4);
  position: fixed;
  z-index: 20;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0"
        >
          <WithStyles(CircularProgress)>
            <CircularProgress
              classes={
                Object {
                  "circle": "MuiCircularProgress-circle-7",
                  "circleDisableShrink": "MuiCircularProgress-circleDisableShrink-10",
                  "circleIndeterminate": "MuiCircularProgress-circleIndeterminate-9",
                  "circleStatic": "MuiCircularProgress-circleStatic-8",
                  "colorPrimary": "MuiCircularProgress-colorPrimary-4",
                  "colorSecondary": "MuiCircularProgress-colorSecondary-5",
                  "indeterminate": "MuiCircularProgress-indeterminate-3",
                  "root": "MuiCircularProgress-root-1",
                  "static": "MuiCircularProgress-static-2",
                  "svg": "MuiCircularProgress-svg-6",
                }
              }
              color="primary"
              disableShrink={false}
              size={40}
              thickness={3.6}
              value={0}
              variant="indeterminate"
            >
              <div
                className="MuiCircularProgress-root-1 MuiCircularProgress-colorPrimary-4 MuiCircularProgress-indeterminate-3"
                role="progressbar"
                style={
                  Object {
                    "height": 40,
                    "width": 40,
                  }
                }
              >
                <svg
                  className="MuiCircularProgress-svg-6"
                  viewBox="22 22 44 44"
                >
                  <circle
                    className="MuiCircularProgress-circle-7 MuiCircularProgress-circleIndeterminate-9"
                    cx={44}
                    cy={44}
                    fill="none"
                    r={20.2}
                    strokeWidth={3.6}
                    style={Object {}}
                  />
                </svg>
              </div>
            </CircularProgress>
          </WithStyles(CircularProgress)>
        </div>
      </StyledComponent>
    </styled.div>
  </OverlaySpinner>
</MockRouter>
`;
