// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot: Pagination/first 1`] = `
<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <WithStyles(Pagination)
    current={1}
    onClick={[MockFunction]}
    total={10}
  >
    <Pagination
      classes={
        Object {
          "buttonGroup": "Pagination-buttonGroup-2",
          "nonCaps": "Pagination-nonCaps-1",
        }
      }
      current={1}
      onClick={[MockFunction]}
      total={10}
    >
      <WithStyles(Button)
        className="Pagination-nonCaps-1 Pagination-buttonGroup-2"
        color="primary"
        disableRipple={true}
      >
        <Button
          className="Pagination-nonCaps-1 Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disableRipple={true}
          disabled={false}
          fullWidth={false}
          mini={false}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
            component="button"
            disableRipple={true}
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={true}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  1 of 10
                </span>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
      <WithStyles(Button)
        className="Pagination-buttonGroup-2"
        color="primary"
        onClick={[Function]}
      >
        <Button
          className="Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  <pure(ChevronRightRoundedIcon)>
                    <ChevronRightRoundedIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-35",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-37",
                              "colorError": "MuiSvgIcon-colorError-36",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-33",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-34",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-38",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-40",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-39",
                              "root": "MuiSvgIcon-root-32",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-32"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M0 0h24v24H0V0z"
                              fill="none"
                            />
                            <path
                              d="M9.29 6.71c-.39.39-.39 1.02 0 1.41L13.17 12l-3.88 3.88c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0l4.59-4.59c.39-.39.39-1.02 0-1.41L10.7 6.7c-.38-.38-1.02-.38-1.41.01z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </ChevronRightRoundedIcon>
                  </pure(ChevronRightRoundedIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-45",
                          "childLeaving": "MuiTouchRipple-childLeaving-46",
                          "childPulsate": "MuiTouchRipple-childPulsate-47",
                          "ripple": "MuiTouchRipple-ripple-42",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-44",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-43",
                          "root": "MuiTouchRipple-root-41",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-41"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-41"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
      <WithStyles(Button)
        className="Pagination-buttonGroup-2"
        color="primary"
        onClick={[Function]}
      >
        <Button
          className="Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  <pure(LastPageRoundedIcon)>
                    <LastPageRoundedIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-35",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-37",
                              "colorError": "MuiSvgIcon-colorError-36",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-33",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-34",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-38",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-40",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-39",
                              "root": "MuiSvgIcon-root-32",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-32"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M0 0h24v24H0V0z"
                              fill="none"
                              opacity=".87"
                            />
                            <path
                              d="M6.29 8.11L10.18 12l-3.89 3.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0l4.59-4.59c.39-.39.39-1.02 0-1.41L7.7 6.7a.9959.9959 0 0 0-1.41 0c-.38.39-.38 1.03 0 1.41zM17 6c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1s-1-.45-1-1V7c0-.55.45-1 1-1z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </LastPageRoundedIcon>
                  </pure(LastPageRoundedIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-45",
                          "childLeaving": "MuiTouchRipple-childLeaving-46",
                          "childPulsate": "MuiTouchRipple-childPulsate-47",
                          "ripple": "MuiTouchRipple-ripple-42",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-44",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-43",
                          "root": "MuiTouchRipple-root-41",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-41"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-41"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
    </Pagination>
  </WithStyles(Pagination)>
</MockRouter>
`;

exports[`should match snapshot: Pagination/last 1`] = `
<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <WithStyles(Pagination)
    current={10}
    onClick={[MockFunction]}
    total={10}
  >
    <Pagination
      classes={
        Object {
          "buttonGroup": "Pagination-buttonGroup-2",
          "nonCaps": "Pagination-nonCaps-1",
        }
      }
      current={10}
      onClick={[MockFunction]}
      total={10}
    >
      <WithStyles(Button)
        className="Pagination-buttonGroup-2"
        color="primary"
        onClick={[Function]}
      >
        <Button
          className="Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  <pure(FirstPageRoundedIcon)>
                    <FirstPageRoundedIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-35",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-37",
                              "colorError": "MuiSvgIcon-colorError-36",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-33",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-34",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-38",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-40",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-39",
                              "root": "MuiSvgIcon-root-32",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-32"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M24 0v24H0V0h24z"
                              fill="none"
                              opacity=".87"
                            />
                            <path
                              d="M17.7 15.89L13.82 12l3.89-3.89c.39-.39.39-1.02 0-1.41a.9959.9959 0 0 0-1.41 0l-4.59 4.59c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .38-.38.38-1.02-.01-1.4zM7 6c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1s-1-.45-1-1V7c0-.55.45-1 1-1z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </FirstPageRoundedIcon>
                  </pure(FirstPageRoundedIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-45",
                          "childLeaving": "MuiTouchRipple-childLeaving-46",
                          "childPulsate": "MuiTouchRipple-childPulsate-47",
                          "ripple": "MuiTouchRipple-ripple-42",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-44",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-43",
                          "root": "MuiTouchRipple-root-41",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-41"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-41"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
      <WithStyles(Button)
        className="Pagination-buttonGroup-2"
        color="primary"
        onClick={[Function]}
      >
        <Button
          className="Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  <pure(ChevronLeftRoundedIcon)>
                    <ChevronLeftRoundedIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-35",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-37",
                              "colorError": "MuiSvgIcon-colorError-36",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-33",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-34",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-38",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-40",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-39",
                              "root": "MuiSvgIcon-root-32",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-32"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M0 0h24v24H0V0z"
                              fill="none"
                            />
                            <path
                              d="M14.71 6.71a.9959.9959 0 0 0-1.41 0L8.71 11.3c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L10.83 12l3.88-3.88c.39-.39.38-1.03 0-1.41z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </ChevronLeftRoundedIcon>
                  </pure(ChevronLeftRoundedIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-45",
                          "childLeaving": "MuiTouchRipple-childLeaving-46",
                          "childPulsate": "MuiTouchRipple-childPulsate-47",
                          "ripple": "MuiTouchRipple-ripple-42",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-44",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-43",
                          "root": "MuiTouchRipple-root-41",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-41"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-41"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
      <WithStyles(Button)
        className="Pagination-nonCaps-1 Pagination-buttonGroup-2"
        color="primary"
        disableRipple={true}
      >
        <Button
          className="Pagination-nonCaps-1 Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disableRipple={true}
          disabled={false}
          fullWidth={false}
          mini={false}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
            component="button"
            disableRipple={true}
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={true}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  10 of 10
                </span>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
    </Pagination>
  </WithStyles(Pagination)>
</MockRouter>
`;

exports[`should match snapshot: Pagination/middle 1`] = `
<MockRouter
  createHref={[Function]}
  location=""
  params={Object {}}
  path=""
  push={[Function]}
  replace={[Function]}
  url=""
>
  <WithStyles(Pagination)
    current={5}
    onClick={[MockFunction]}
    total={10}
  >
    <Pagination
      classes={
        Object {
          "buttonGroup": "Pagination-buttonGroup-2",
          "nonCaps": "Pagination-nonCaps-1",
        }
      }
      current={5}
      onClick={[MockFunction]}
      total={10}
    >
      <WithStyles(Button)
        className="Pagination-buttonGroup-2"
        color="primary"
        onClick={[Function]}
      >
        <Button
          className="Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  <pure(FirstPageRoundedIcon)>
                    <FirstPageRoundedIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-35",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-37",
                              "colorError": "MuiSvgIcon-colorError-36",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-33",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-34",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-38",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-40",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-39",
                              "root": "MuiSvgIcon-root-32",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-32"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M24 0v24H0V0h24z"
                              fill="none"
                              opacity=".87"
                            />
                            <path
                              d="M17.7 15.89L13.82 12l3.89-3.89c.39-.39.39-1.02 0-1.41a.9959.9959 0 0 0-1.41 0l-4.59 4.59c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .38-.38.38-1.02-.01-1.4zM7 6c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1s-1-.45-1-1V7c0-.55.45-1 1-1z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </FirstPageRoundedIcon>
                  </pure(FirstPageRoundedIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-45",
                          "childLeaving": "MuiTouchRipple-childLeaving-46",
                          "childPulsate": "MuiTouchRipple-childPulsate-47",
                          "ripple": "MuiTouchRipple-ripple-42",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-44",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-43",
                          "root": "MuiTouchRipple-root-41",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-41"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-41"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
      <WithStyles(Button)
        className="Pagination-buttonGroup-2"
        color="primary"
        onClick={[Function]}
      >
        <Button
          className="Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  <pure(ChevronLeftRoundedIcon)>
                    <ChevronLeftRoundedIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-35",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-37",
                              "colorError": "MuiSvgIcon-colorError-36",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-33",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-34",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-38",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-40",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-39",
                              "root": "MuiSvgIcon-root-32",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-32"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M0 0h24v24H0V0z"
                              fill="none"
                            />
                            <path
                              d="M14.71 6.71a.9959.9959 0 0 0-1.41 0L8.71 11.3c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L10.83 12l3.88-3.88c.39-.39.38-1.03 0-1.41z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </ChevronLeftRoundedIcon>
                  </pure(ChevronLeftRoundedIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-45",
                          "childLeaving": "MuiTouchRipple-childLeaving-46",
                          "childPulsate": "MuiTouchRipple-childPulsate-47",
                          "ripple": "MuiTouchRipple-ripple-42",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-44",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-43",
                          "root": "MuiTouchRipple-root-41",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-41"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-41"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
      <WithStyles(Button)
        className="Pagination-nonCaps-1 Pagination-buttonGroup-2"
        color="primary"
        disableRipple={true}
      >
        <Button
          className="Pagination-nonCaps-1 Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disableRipple={true}
          disabled={false}
          fullWidth={false}
          mini={false}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
            component="button"
            disableRipple={true}
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={true}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-nonCaps-1 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  5 of 10
                </span>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
      <WithStyles(Button)
        className="Pagination-buttonGroup-2"
        color="primary"
        onClick={[Function]}
      >
        <Button
          className="Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  <pure(ChevronRightRoundedIcon)>
                    <ChevronRightRoundedIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-35",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-37",
                              "colorError": "MuiSvgIcon-colorError-36",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-33",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-34",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-38",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-40",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-39",
                              "root": "MuiSvgIcon-root-32",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-32"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M0 0h24v24H0V0z"
                              fill="none"
                            />
                            <path
                              d="M9.29 6.71c-.39.39-.39 1.02 0 1.41L13.17 12l-3.88 3.88c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0l4.59-4.59c.39-.39.39-1.02 0-1.41L10.7 6.7c-.38-.38-1.02-.38-1.41.01z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </ChevronRightRoundedIcon>
                  </pure(ChevronRightRoundedIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-45",
                          "childLeaving": "MuiTouchRipple-childLeaving-46",
                          "childPulsate": "MuiTouchRipple-childPulsate-47",
                          "ripple": "MuiTouchRipple-ripple-42",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-44",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-43",
                          "root": "MuiTouchRipple-root-41",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-41"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-41"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
      <WithStyles(Button)
        className="Pagination-buttonGroup-2"
        color="primary"
        onClick={[Function]}
      >
        <Button
          className="Pagination-buttonGroup-2"
          classes={
            Object {
              "colorInherit": "MuiButton-colorInherit-24",
              "contained": "MuiButton-contained-14",
              "containedPrimary": "MuiButton-containedPrimary-15",
              "containedSecondary": "MuiButton-containedSecondary-16",
              "disabled": "MuiButton-disabled-23",
              "extendedFab": "MuiButton-extendedFab-21",
              "fab": "MuiButton-fab-20",
              "flat": "MuiButton-flat-8",
              "flatPrimary": "MuiButton-flatPrimary-9",
              "flatSecondary": "MuiButton-flatSecondary-10",
              "focusVisible": "MuiButton-focusVisible-22",
              "fullWidth": "MuiButton-fullWidth-28",
              "label": "MuiButton-label-4",
              "mini": "MuiButton-mini-25",
              "outlined": "MuiButton-outlined-11",
              "outlinedPrimary": "MuiButton-outlinedPrimary-12",
              "outlinedSecondary": "MuiButton-outlinedSecondary-13",
              "raised": "MuiButton-raised-17",
              "raisedPrimary": "MuiButton-raisedPrimary-18",
              "raisedSecondary": "MuiButton-raisedSecondary-19",
              "root": "MuiButton-root-3",
              "sizeLarge": "MuiButton-sizeLarge-27",
              "sizeSmall": "MuiButton-sizeSmall-26",
              "text": "MuiButton-text-5",
              "textPrimary": "MuiButton-textPrimary-6",
              "textSecondary": "MuiButton-textSecondary-7",
            }
          }
          color="primary"
          component="button"
          disableFocusRipple={false}
          disabled={false}
          fullWidth={false}
          mini={false}
          onClick={[Function]}
          size="medium"
          type="button"
          variant="text"
        >
          <WithStyles(ButtonBase)
            className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
            component="button"
            disabled={false}
            focusRipple={true}
            focusVisibleClassName="MuiButton-focusVisible-22"
            onClick={[Function]}
            type="button"
          >
            <ButtonBase
              centerRipple={false}
              className="MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
              classes={
                Object {
                  "disabled": "MuiButtonBase-disabled-30",
                  "focusVisible": "MuiButtonBase-focusVisible-31",
                  "root": "MuiButtonBase-root-29",
                }
              }
              component="button"
              disableRipple={false}
              disableTouchRipple={false}
              disabled={false}
              focusRipple={true}
              focusVisibleClassName="MuiButton-focusVisible-22"
              onClick={[Function]}
              tabIndex="0"
              type="button"
            >
              <button
                className="MuiButtonBase-root-29 MuiButton-root-3 MuiButton-text-5 MuiButton-textPrimary-6 MuiButton-flat-8 MuiButton-flatPrimary-9 Pagination-buttonGroup-2"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onContextMenu={[Function]}
                onFocus={[Function]}
                onKeyDown={[Function]}
                onKeyUp={[Function]}
                onMouseDown={[Function]}
                onMouseLeave={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchMove={[Function]}
                onTouchStart={[Function]}
                tabIndex="0"
                type="button"
              >
                <span
                  className="MuiButton-label-4"
                >
                  <pure(LastPageRoundedIcon)>
                    <LastPageRoundedIcon>
                      <WithStyles(SvgIcon)>
                        <SvgIcon
                          classes={
                            Object {
                              "colorAction": "MuiSvgIcon-colorAction-35",
                              "colorDisabled": "MuiSvgIcon-colorDisabled-37",
                              "colorError": "MuiSvgIcon-colorError-36",
                              "colorPrimary": "MuiSvgIcon-colorPrimary-33",
                              "colorSecondary": "MuiSvgIcon-colorSecondary-34",
                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-38",
                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-40",
                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-39",
                              "root": "MuiSvgIcon-root-32",
                            }
                          }
                          color="inherit"
                          component="svg"
                          fontSize="default"
                          viewBox="0 0 24 24"
                        >
                          <svg
                            aria-hidden="true"
                            className="MuiSvgIcon-root-32"
                            focusable="false"
                            role="presentation"
                            viewBox="0 0 24 24"
                          >
                            <path
                              d="M0 0h24v24H0V0z"
                              fill="none"
                              opacity=".87"
                            />
                            <path
                              d="M6.29 8.11L10.18 12l-3.89 3.89c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0l4.59-4.59c.39-.39.39-1.02 0-1.41L7.7 6.7a.9959.9959 0 0 0-1.41 0c-.38.39-.38 1.03 0 1.41zM17 6c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1s-1-.45-1-1V7c0-.55.45-1 1-1z"
                            />
                          </svg>
                        </SvgIcon>
                      </WithStyles(SvgIcon)>
                    </LastPageRoundedIcon>
                  </pure(LastPageRoundedIcon)>
                </span>
                <NoSsr
                  defer={false}
                  fallback={null}
                >
                  <WithStyles(TouchRipple)
                    center={false}
                    innerRef={[Function]}
                  >
                    <TouchRipple
                      center={false}
                      classes={
                        Object {
                          "child": "MuiTouchRipple-child-45",
                          "childLeaving": "MuiTouchRipple-childLeaving-46",
                          "childPulsate": "MuiTouchRipple-childPulsate-47",
                          "ripple": "MuiTouchRipple-ripple-42",
                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-44",
                          "rippleVisible": "MuiTouchRipple-rippleVisible-43",
                          "root": "MuiTouchRipple-root-41",
                        }
                      }
                    >
                      <TransitionGroup
                        childFactory={[Function]}
                        className="MuiTouchRipple-root-41"
                        component="span"
                        enter={true}
                        exit={true}
                      >
                        <span
                          className="MuiTouchRipple-root-41"
                        />
                      </TransitionGroup>
                    </TouchRipple>
                  </WithStyles(TouchRipple)>
                </NoSsr>
              </button>
            </ButtonBase>
          </WithStyles(ButtonBase)>
        </Button>
      </WithStyles(Button)>
    </Pagination>
  </WithStyles(Pagination)>
</MockRouter>
`;
